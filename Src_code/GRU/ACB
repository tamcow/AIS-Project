{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1qnE4JcepE0RJQ2oIzjbyHtOLrEi77jCI","timestamp":1697125232108},{"file_id":"1GHR5tTHO0uMu-uzYC9OcNcNjGg8Sbvp7","timestamp":1697083417178}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 1. Kết nối tới drive , import một số thư viện cần thiết"],"metadata":{"id":"7-epYAdnrvEv"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"mK9bDo96rCS3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704856887710,"user_tz":-420,"elapsed":2622,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"b5b98d45-e873-4e81-c3db-636ae4db10ee"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","execution_count":5,"metadata":{"id":"x7N0Kb9pOhyW","executionInfo":{"status":"ok","timestamp":1704856887710,"user_tz":-420,"elapsed":4,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"outputs":[],"source":["import numpy.polynomial.polynomial as poly\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","\n","\n","from datetime import datetime\n","from sklearn.metrics import r2_score\n","from sklearn.metrics import mean_squared_error, mean_absolute_error\n","from sklearn.preprocessing import MinMaxScaler, StandardScaler\n","from sklearn.utils import column_or_1d\n","\n","from keras.models import Sequential\n","from keras.layers import Dense, GRU"]},{"cell_type":"code","source":["ACB = pd.read_csv(\"/content/drive/MyDrive/ACB.csv\")"],"metadata":{"id":"4NcZE4PqOoUH","executionInfo":{"status":"ok","timestamp":1704856887710,"user_tz":-420,"elapsed":3,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["ACB"],"metadata":{"id":"JV-AX3mOO8T7","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1704856888425,"user_tz":-420,"elapsed":718,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"3a777bf9-8b7d-4abe-c5c1-3690ac7b7f2a"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date    Price     Open     High      Low        Vol.  Change %\n","0    2023-01-03  22700.0  22000.0  22700.0  21950.0   1550000.0  0.220751\n","1    2023-01-04  22650.0  22850.0  22850.0  22550.0   1640000.0 -0.875274\n","2    2023-01-05  22850.0  22750.0  23000.0  22650.0   2100000.0 -1.508621\n","3    2023-01-06  23200.0  23100.0  23350.0  22600.0   3270000.0  0.432900\n","4    2023-01-09  23100.0  23350.0  23350.0  22950.0   1750000.0 -1.492537\n","..          ...      ...      ...      ...      ...         ...       ...\n","231  2023-12-25  23350.0  23250.0  23450.0  23200.0   7580000.0  0.430108\n","232  2023-12-26  23250.0  23400.0  23400.0  23250.0   5730000.0 -0.214592\n","233  2023-12-27  23300.0  23200.0  23400.0  23200.0   4870000.0 -1.894737\n","234  2023-12-28  23750.0  23300.0  23950.0  23300.0  10510000.0 -0.627615\n","235  2023-12-29  23900.0  23900.0  24100.0  23800.0  10268240.0       NaN\n","\n","[236 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-3c98f90d-d06c-4353-a634-b863e2ef3058\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-01-03</td>\n","      <td>22700.0</td>\n","      <td>22000.0</td>\n","      <td>22700.0</td>\n","      <td>21950.0</td>\n","      <td>1550000.0</td>\n","      <td>0.220751</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-01-04</td>\n","      <td>22650.0</td>\n","      <td>22850.0</td>\n","      <td>22850.0</td>\n","      <td>22550.0</td>\n","      <td>1640000.0</td>\n","      <td>-0.875274</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-01-05</td>\n","      <td>22850.0</td>\n","      <td>22750.0</td>\n","      <td>23000.0</td>\n","      <td>22650.0</td>\n","      <td>2100000.0</td>\n","      <td>-1.508621</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-01-06</td>\n","      <td>23200.0</td>\n","      <td>23100.0</td>\n","      <td>23350.0</td>\n","      <td>22600.0</td>\n","      <td>3270000.0</td>\n","      <td>0.432900</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-01-09</td>\n","      <td>23100.0</td>\n","      <td>23350.0</td>\n","      <td>23350.0</td>\n","      <td>22950.0</td>\n","      <td>1750000.0</td>\n","      <td>-1.492537</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>231</th>\n","      <td>2023-12-25</td>\n","      <td>23350.0</td>\n","      <td>23250.0</td>\n","      <td>23450.0</td>\n","      <td>23200.0</td>\n","      <td>7580000.0</td>\n","      <td>0.430108</td>\n","    </tr>\n","    <tr>\n","      <th>232</th>\n","      <td>2023-12-26</td>\n","      <td>23250.0</td>\n","      <td>23400.0</td>\n","      <td>23400.0</td>\n","      <td>23250.0</td>\n","      <td>5730000.0</td>\n","      <td>-0.214592</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>2023-12-27</td>\n","      <td>23300.0</td>\n","      <td>23200.0</td>\n","      <td>23400.0</td>\n","      <td>23200.0</td>\n","      <td>4870000.0</td>\n","      <td>-1.894737</td>\n","    </tr>\n","    <tr>\n","      <th>234</th>\n","      <td>2023-12-28</td>\n","      <td>23750.0</td>\n","      <td>23300.0</td>\n","      <td>23950.0</td>\n","      <td>23300.0</td>\n","      <td>10510000.0</td>\n","      <td>-0.627615</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>2023-12-29</td>\n","      <td>23900.0</td>\n","      <td>23900.0</td>\n","      <td>24100.0</td>\n","      <td>23800.0</td>\n","      <td>10268240.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>236 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c98f90d-d06c-4353-a634-b863e2ef3058')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3c98f90d-d06c-4353-a634-b863e2ef3058 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3c98f90d-d06c-4353-a634-b863e2ef3058');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9ee54ad4-47e7-48f4-981e-f1384eb9a930\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ee54ad4-47e7-48f4-981e-f1384eb9a930')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9ee54ad4-47e7-48f4-981e-f1384eb9a930 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e982b361-f0d7-4762-95e8-4a0c191ee2d1\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('ACB')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e982b361-f0d7-4762-95e8-4a0c191ee2d1 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('ACB');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["ACB.info()"],"metadata":{"id":"Lj99cSN5rG4u","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704856888426,"user_tz":-420,"elapsed":24,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"cb16962b-bed0-44e8-869f-4051b1b534ef"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 236 entries, 0 to 235\n","Data columns (total 7 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Date      236 non-null    object \n"," 1   Price     236 non-null    float64\n"," 2   Open      236 non-null    float64\n"," 3   High      236 non-null    float64\n"," 4   Low       236 non-null    float64\n"," 5   Vol.      236 non-null    float64\n"," 6   Change %  235 non-null    float64\n","dtypes: float64(6), object(1)\n","memory usage: 13.0+ KB\n"]}]},{"cell_type":"markdown","source":["# 2. Tiền xử lý dữ liệu"],"metadata":{"id":"n7Kzv8I3rqLZ"}},{"cell_type":"markdown","source":["### Loại bỏ một số dữ liệu trống trong dataset"],"metadata":{"id":"ovfqfYQ1r7Mt"}},{"cell_type":"code","source":["# Drop missing values\n","ACB = ACB.dropna()"],"metadata":{"id":"y9KGNmaFPNat","executionInfo":{"status":"ok","timestamp":1704856888426,"user_tz":-420,"elapsed":22,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["ACB1 = ACB.reset_index()['Price']"],"metadata":{"id":"-TCtieoePNgm","executionInfo":{"status":"ok","timestamp":1704856888426,"user_tz":-420,"elapsed":22,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["ACB['Index'] = np.arange(len(ACB.index))\n","\n","\n"],"metadata":{"id":"qMRscjafPNjp","executionInfo":{"status":"ok","timestamp":1704856888426,"user_tz":-420,"elapsed":21,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"299f8b17-aa39-4d82-c299-576b4f2710f3"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-11-a36f351cbb95>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  ACB['Index'] = np.arange(len(ACB.index))\n"]}]},{"cell_type":"markdown","source":["<h1> 3.Scale dữ liệu"],"metadata":{"id":"VVEZNAFepzSx"}},{"cell_type":"code","source":["scaler=MinMaxScaler(feature_range=(0,1))\n","ACB1=scaler.fit_transform(np.array(ACB1).reshape(-1,1))"],"metadata":{"id":"G-s3Ci_Op24W","executionInfo":{"status":"ok","timestamp":1704856888427,"user_tz":-420,"elapsed":17,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":["# 4. Chia tập dữ liệu để train-test-validate theo tỉ lệ 7:2:1"],"metadata":{"id":"QfL_QnOzsfRX"}},{"cell_type":"code","source":["# Split the data into training, testing, and validation sets\n","train_size = int(0.7 * len(ACB1))\n","test_size = int(0.2 * len(ACB1))\n","val_size = len(ACB1) - train_size - test_size"],"metadata":{"id":"rq0DYR5nPde7","executionInfo":{"status":"ok","timestamp":1704856888427,"user_tz":-420,"elapsed":17,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["train_data = ACB1[:train_size]\n","test_data = ACB1[train_size:train_size+test_size]\n","val_data = ACB1[train_size+test_size:]"],"metadata":{"id":"OHHVGbyLPom3","executionInfo":{"status":"ok","timestamp":1704856888427,"user_tz":-420,"elapsed":17,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":["<h1>Hàm Create Dataset"],"metadata":{"id":"7wuXUGKRtFIp"}},{"cell_type":"code","source":["#Chuyển mảng giá trị của dataset thành ma trận\n","def create_dataset(dataset, time_step=1):\n","\tdataX, dataY = [], []\n","\tfor i in range(len(dataset)-time_step-1):\n","\t\ta = dataset[i:(i+time_step), 0]\n","\t\tdataX.append(a)\n","\t\tdataY.append(dataset[i + time_step, 0])\n","\treturn numpy.array(dataX), numpy.array(dataY)"],"metadata":{"id":"0x5fnQwxs2K8","executionInfo":{"status":"ok","timestamp":1704856888427,"user_tz":-420,"elapsed":16,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["import numpy\n","#Reshape into X=t,t+1, t+2... t+20 and Y= t+20\n","time_step = 20\n","X_train, y_train = create_dataset(train_data, time_step)\n","X_val, yval = create_dataset(val_data, time_step)\n","X_test, ytest = create_dataset(test_data, time_step)"],"metadata":{"id":"vYHWGCZrHFOJ","executionInfo":{"status":"ok","timestamp":1704856888428,"user_tz":-420,"elapsed":17,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["#Reshape input to be [samples, time steps, features] which is required for LSTM\n","X_train =X_train.reshape(X_train.shape[0],X_train.shape[1] , 1)\n","X_test = X_test.reshape(X_test.shape[0],X_test.shape[1] , 1)\n","X_val = X_val.reshape(X_val.shape[0],X_val.shape[1] , 1)"],"metadata":{"id":"VVP0KnNsHhh-","executionInfo":{"status":"ok","timestamp":1704856888428,"user_tz":-420,"elapsed":17,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["#Define GRU model\n","model = Sequential()\n","model.add(GRU(64, input_shape=(time_step, 1)))\n","model.add(Dense(1))\n","model.compile(optimizer='adam', loss='mean_squared_error')"],"metadata":{"id":"TvXQkvakHqVc","executionInfo":{"status":"ok","timestamp":1704856888959,"user_tz":-420,"elapsed":548,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["#Model fitting\n","model.fit(X_train,y_train,validation_data=(X_test,ytest),epochs=100,batch_size=64,verbose=1)"],"metadata":{"id":"qamlhrLuH21t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704856911325,"user_tz":-420,"elapsed":22373,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"e8bc5ec4-8318-4e11-dcde-09f3c509ccf7"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","3/3 [==============================] - 3s 266ms/step - loss: 0.1722 - val_loss: 0.0184\n","Epoch 2/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0884 - val_loss: 0.0078\n","Epoch 3/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0399 - val_loss: 0.0116\n","Epoch 4/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0186 - val_loss: 0.0255\n","Epoch 5/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0255 - val_loss: 0.0338\n","Epoch 6/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0302 - val_loss: 0.0285\n","Epoch 7/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0240 - val_loss: 0.0192\n","Epoch 8/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0172 - val_loss: 0.0126\n","Epoch 9/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0152 - val_loss: 0.0093\n","Epoch 10/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0157 - val_loss: 0.0080\n","Epoch 11/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0162 - val_loss: 0.0077\n","Epoch 12/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0154 - val_loss: 0.0080\n","Epoch 13/100\n","3/3 [==============================] - 0s 33ms/step - loss: 0.0140 - val_loss: 0.0089\n","Epoch 14/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0132 - val_loss: 0.0097\n","Epoch 15/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0129 - val_loss: 0.0098\n","Epoch 16/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0126 - val_loss: 0.0092\n","Epoch 17/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0122 - val_loss: 0.0085\n","Epoch 18/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0119 - val_loss: 0.0078\n","Epoch 19/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0115 - val_loss: 0.0073\n","Epoch 20/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0113 - val_loss: 0.0069\n","Epoch 21/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0111 - val_loss: 0.0066\n","Epoch 22/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0109 - val_loss: 0.0065\n","Epoch 23/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0107 - val_loss: 0.0064\n","Epoch 24/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0106 - val_loss: 0.0063\n","Epoch 25/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0105 - val_loss: 0.0061\n","Epoch 26/100\n","3/3 [==============================] - 0s 31ms/step - loss: 0.0104 - val_loss: 0.0060\n","Epoch 27/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0103 - val_loss: 0.0060\n","Epoch 28/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0102 - val_loss: 0.0060\n","Epoch 29/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0101 - val_loss: 0.0060\n","Epoch 30/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0101 - val_loss: 0.0060\n","Epoch 31/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0100 - val_loss: 0.0060\n","Epoch 32/100\n","3/3 [==============================] - 0s 31ms/step - loss: 0.0100 - val_loss: 0.0059\n","Epoch 33/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0099 - val_loss: 0.0058\n","Epoch 34/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0098 - val_loss: 0.0057\n","Epoch 35/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0097 - val_loss: 0.0057\n","Epoch 36/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0097 - val_loss: 0.0057\n","Epoch 37/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0096 - val_loss: 0.0057\n","Epoch 38/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0096 - val_loss: 0.0056\n","Epoch 39/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0095 - val_loss: 0.0055\n","Epoch 40/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0094 - val_loss: 0.0055\n","Epoch 41/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0094 - val_loss: 0.0055\n","Epoch 42/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0093 - val_loss: 0.0055\n","Epoch 43/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0093 - val_loss: 0.0055\n","Epoch 44/100\n","3/3 [==============================] - 0s 45ms/step - loss: 0.0092 - val_loss: 0.0054\n","Epoch 45/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0091 - val_loss: 0.0054\n","Epoch 46/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0091 - val_loss: 0.0053\n","Epoch 47/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0090 - val_loss: 0.0053\n","Epoch 48/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0090 - val_loss: 0.0053\n","Epoch 49/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0089 - val_loss: 0.0053\n","Epoch 50/100\n","3/3 [==============================] - 0s 41ms/step - loss: 0.0089 - val_loss: 0.0052\n","Epoch 51/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0089 - val_loss: 0.0052\n","Epoch 52/100\n","3/3 [==============================] - 0s 44ms/step - loss: 0.0089 - val_loss: 0.0052\n","Epoch 53/100\n","3/3 [==============================] - 0s 47ms/step - loss: 0.0087 - val_loss: 0.0053\n","Epoch 54/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0087 - val_loss: 0.0055\n","Epoch 55/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0089 - val_loss: 0.0055\n","Epoch 56/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0088 - val_loss: 0.0053\n","Epoch 57/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0087 - val_loss: 0.0051\n","Epoch 58/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0086 - val_loss: 0.0051\n","Epoch 59/100\n","3/3 [==============================] - 0s 46ms/step - loss: 0.0086 - val_loss: 0.0051\n","Epoch 60/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0085 - val_loss: 0.0051\n","Epoch 61/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0085 - val_loss: 0.0052\n","Epoch 62/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0085 - val_loss: 0.0052\n","Epoch 63/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0085 - val_loss: 0.0052\n","Epoch 64/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0085 - val_loss: 0.0051\n","Epoch 65/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0084 - val_loss: 0.0051\n","Epoch 66/100\n","3/3 [==============================] - 0s 35ms/step - loss: 0.0084 - val_loss: 0.0051\n","Epoch 67/100\n","3/3 [==============================] - 0s 35ms/step - loss: 0.0083 - val_loss: 0.0050\n","Epoch 68/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0083 - val_loss: 0.0049\n","Epoch 69/100\n","3/3 [==============================] - 0s 48ms/step - loss: 0.0083 - val_loss: 0.0049\n","Epoch 70/100\n","3/3 [==============================] - 0s 43ms/step - loss: 0.0083 - val_loss: 0.0049\n","Epoch 71/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0082 - val_loss: 0.0049\n","Epoch 72/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0082 - val_loss: 0.0051\n","Epoch 73/100\n","3/3 [==============================] - 0s 45ms/step - loss: 0.0082 - val_loss: 0.0050\n","Epoch 74/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0082 - val_loss: 0.0049\n","Epoch 75/100\n","3/3 [==============================] - 0s 52ms/step - loss: 0.0081 - val_loss: 0.0048\n","Epoch 76/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0083 - val_loss: 0.0047\n","Epoch 77/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0082 - val_loss: 0.0048\n","Epoch 78/100\n","3/3 [==============================] - 0s 48ms/step - loss: 0.0081 - val_loss: 0.0048\n","Epoch 79/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0080 - val_loss: 0.0048\n","Epoch 80/100\n","3/3 [==============================] - 0s 45ms/step - loss: 0.0080 - val_loss: 0.0047\n","Epoch 81/100\n","3/3 [==============================] - 0s 50ms/step - loss: 0.0081 - val_loss: 0.0047\n","Epoch 82/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0080 - val_loss: 0.0050\n","Epoch 83/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0080 - val_loss: 0.0051\n","Epoch 84/100\n","3/3 [==============================] - 0s 47ms/step - loss: 0.0081 - val_loss: 0.0050\n","Epoch 85/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0080 - val_loss: 0.0048\n","Epoch 86/100\n","3/3 [==============================] - 0s 44ms/step - loss: 0.0080 - val_loss: 0.0047\n","Epoch 87/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0079 - val_loss: 0.0048\n","Epoch 88/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0078 - val_loss: 0.0050\n","Epoch 89/100\n","3/3 [==============================] - 0s 44ms/step - loss: 0.0080 - val_loss: 0.0050\n","Epoch 90/100\n","3/3 [==============================] - 0s 46ms/step - loss: 0.0080 - val_loss: 0.0048\n","Epoch 91/100\n","3/3 [==============================] - 0s 42ms/step - loss: 0.0079 - val_loss: 0.0046\n","Epoch 92/100\n","3/3 [==============================] - 0s 45ms/step - loss: 0.0080 - val_loss: 0.0046\n","Epoch 93/100\n","3/3 [==============================] - 0s 46ms/step - loss: 0.0080 - val_loss: 0.0046\n","Epoch 94/100\n","3/3 [==============================] - 0s 48ms/step - loss: 0.0079 - val_loss: 0.0049\n","Epoch 95/100\n","3/3 [==============================] - 0s 44ms/step - loss: 0.0079 - val_loss: 0.0049\n","Epoch 96/100\n","3/3 [==============================] - 0s 42ms/step - loss: 0.0078 - val_loss: 0.0047\n","Epoch 97/100\n","3/3 [==============================] - 0s 48ms/step - loss: 0.0078 - val_loss: 0.0047\n","Epoch 98/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0077 - val_loss: 0.0048\n","Epoch 99/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0078 - val_loss: 0.0048\n","Epoch 100/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0077 - val_loss: 0.0047\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7846a962b2e0>"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["<h1>Dự báo dữ liệu test, val"],"metadata":{"id":"BoCSCZfvtSoK"}},{"cell_type":"code","source":["train_predict=model.predict(X_train)\n","y_pred=model.predict(X_test)\n","y_pred_val=model.predict(X_val)"],"metadata":{"id":"PXdaljDYPoso","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704856912370,"user_tz":-420,"elapsed":1063,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"3187ea53-1e1f-4dc5-bf10-e825a8f27ef3"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["5/5 [==============================] - 1s 8ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 35ms/step\n"]}]},{"cell_type":"markdown","source":["<h1>Chuẩn hóa dữ liệu"],"metadata":{"id":"BgyCaXcjt--_"}},{"cell_type":"code","source":["#Chuẩn hóa dữ liệu y_pred, y_pred_val\n","train_predict=scaler.inverse_transform(train_predict)\n","y_pred=scaler.inverse_transform(y_pred)\n","y_pred_val=scaler.inverse_transform(y_pred_val)"],"metadata":{"id":"kpOOSDZ6QGw7","executionInfo":{"status":"ok","timestamp":1704856912371,"user_tz":-420,"elapsed":21,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["ytest = scaler.inverse_transform(ytest.reshape(-1,1))\n","ytest"],"metadata":{"id":"5bcSO5wiPSE6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704856912372,"user_tz":-420,"elapsed":21,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"85a2b36a-1488-44c1-f873-90f7e966f77a"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[21800.],\n","       [21900.],\n","       [21800.],\n","       [21900.],\n","       [21900.],\n","       [21100.],\n","       [21550.],\n","       [21300.],\n","       [21400.],\n","       [21600.],\n","       [22300.],\n","       [22050.],\n","       [22200.],\n","       [22100.],\n","       [22800.],\n","       [22550.],\n","       [22400.],\n","       [22450.],\n","       [22700.],\n","       [23250.],\n","       [23300.],\n","       [22700.],\n","       [22500.],\n","       [22600.],\n","       [22700.],\n","       [22200.]])"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["yval = scaler.inverse_transform(yval.reshape(-1,1))\n","yval"],"metadata":{"id":"kvXio7uyPdXD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704856912372,"user_tz":-420,"elapsed":16,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"22469175-25cc-4aa9-cc6f-8cc8a397d17e"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[23350.],\n","       [23250.],\n","       [23300.]])"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["<h1>Đánh giá độ chính xác của thuật toán"],"metadata":{"id":"v3wMG4FGEdsG"}},{"cell_type":"code","source":["# RMSE\n","valid_rmse = np.sqrt(np.mean((y_pred_val - yval)**2))\n","test_rmse = np.sqrt(np.mean((y_pred - ytest)**2))\n","print('Validation RMSE:', valid_rmse)\n","print('Testing RMSE:', test_rmse)"],"metadata":{"id":"lCzRkwcDPzAg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704856912372,"user_tz":-420,"elapsed":13,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"eab05f3d-21f7-486a-a937-c85ca90526f6"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation RMSE: 79.721870946461\n","Testing RMSE: 358.58147906497527\n"]}]},{"cell_type":"code","source":["#MAE\n","valid_mae = mean_absolute_error(yval,y_pred_val)\n","test_mae = mean_absolute_error(ytest, y_pred)\n","print('Validation MAE:', valid_mae)\n","print('Testing MAE:', test_mae)"],"metadata":{"id":"_EpYLbfDW1Fk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704856912372,"user_tz":-420,"elapsed":11,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"23b4d389-4391-4f55-9dd5-e01636dd568d"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation MAE: 65.95247395833333\n","Testing MAE: 266.73647836538476\n"]}]},{"cell_type":"code","source":["#MAPE\n","valid_mape = np.mean(np.abs((yval - y_pred_val) / yval))*100\n","test_mape = np.mean(np.abs((ytest - y_pred) / ytest))*100\n","print('Validation MAPE:', valid_mape)\n","print('Testing MAPE:', test_mape)"],"metadata":{"id":"h9Jvo9-5wuLl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704856912372,"user_tz":-420,"elapsed":9,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"b2b0cd21-97a8-4544-d09d-1bd96c152a90"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation MAPE: 0.28281050638645605\n","Testing MAPE: 1.1996575565460068\n"]}]},{"cell_type":"markdown","source":["<h1>Quá trình dự đoán giá cổ phiếu trong 30 ngày tiếp theo"],"metadata":{"id":"FStBXaC5uHfR"}},{"cell_type":"code","source":["x_input=val_data[4:].reshape(1,-1)\n","x_input.shape\n","\n","temp_input=list(x_input)\n","temp_input=temp_input[0].tolist()\n","\n","from numpy import array\n","\n","lst_output=[]\n","n_steps=20\n","i=0\n","while(i<30):\n","\n","    if(len(temp_input)>20):\n","        #print(temp_input)\n","        x_input=np.array(temp_input[1:])\n","        print(\"{} day input {}\".format(i,x_input))\n","        x_input=x_input.reshape(1,-1)\n","        x_input = x_input.reshape((1, n_steps, 1))\n","        #print(x_input)\n","        yhat = model.predict(x_input, verbose=0)\n","        print(\"{} day output {}\".format(i,yhat))\n","        temp_input.extend(yhat[0].tolist())\n","        temp_input=temp_input[1:]\n","        #print(temp_input)\n","        lst_output.extend(yhat.tolist())\n","        i=i+1\n","    else:\n","        x_input = x_input.reshape((1,n_steps,1))\n","        yhat = model.predict(x_input, verbose=0)\n","        print(yhat[0])\n","        temp_input.extend(yhat[0].tolist())\n","        print(len(temp_input))\n","        lst_output.extend(yhat.tolist())\n","        i=i+1\n"],"metadata":{"id":"-zckNSHFPdh4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704856915674,"user_tz":-420,"elapsed":3309,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"ac9718d3-8740-42ab-db6b-2c660d3840a8"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.46486622]\n","21\n","1 day input [0.22857143 0.2        0.22857143 0.24761905 0.24761905 0.24761905\n"," 0.26666667 0.22857143 0.26666667 0.31428571 0.32380952 0.37142857\n"," 0.4        0.40952381 0.4        0.42857143 0.40952381 0.41904762\n"," 0.5047619  0.46486622]\n","1 day output [[0.4674058]]\n","2 day input [0.2        0.22857143 0.24761905 0.24761905 0.24761905 0.26666667\n"," 0.22857143 0.26666667 0.31428571 0.32380952 0.37142857 0.4\n"," 0.40952381 0.4        0.42857143 0.40952381 0.41904762 0.5047619\n"," 0.46486622 0.4674058 ]\n","2 day output [[0.4663103]]\n","3 day input [0.22857143 0.24761905 0.24761905 0.24761905 0.26666667 0.22857143\n"," 0.26666667 0.31428571 0.32380952 0.37142857 0.4        0.40952381\n"," 0.4        0.42857143 0.40952381 0.41904762 0.5047619  0.46486622\n"," 0.4674058  0.46631029]\n","3 day output [[0.46406782]]\n","4 day input [0.24761905 0.24761905 0.24761905 0.26666667 0.22857143 0.26666667\n"," 0.31428571 0.32380952 0.37142857 0.4        0.40952381 0.4\n"," 0.42857143 0.40952381 0.41904762 0.5047619  0.46486622 0.4674058\n"," 0.46631029 0.46406782]\n","4 day output [[0.46140844]]\n","5 day input [0.24761905 0.24761905 0.26666667 0.22857143 0.26666667 0.31428571\n"," 0.32380952 0.37142857 0.4        0.40952381 0.4        0.42857143\n"," 0.40952381 0.41904762 0.5047619  0.46486622 0.4674058  0.46631029\n"," 0.46406782 0.46140844]\n","5 day output [[0.45860428]]\n","6 day input [0.24761905 0.26666667 0.22857143 0.26666667 0.31428571 0.32380952\n"," 0.37142857 0.4        0.40952381 0.4        0.42857143 0.40952381\n"," 0.41904762 0.5047619  0.46486622 0.4674058  0.46631029 0.46406782\n"," 0.46140844 0.45860428]\n","6 day output [[0.45578358]]\n","7 day input [0.26666667 0.22857143 0.26666667 0.31428571 0.32380952 0.37142857\n"," 0.4        0.40952381 0.4        0.42857143 0.40952381 0.41904762\n"," 0.5047619  0.46486622 0.4674058  0.46631029 0.46406782 0.46140844\n"," 0.45860428 0.45578358]\n","7 day output [[0.45301282]]\n","8 day input [0.22857143 0.26666667 0.31428571 0.32380952 0.37142857 0.4\n"," 0.40952381 0.4        0.42857143 0.40952381 0.41904762 0.5047619\n"," 0.46486622 0.4674058  0.46631029 0.46406782 0.46140844 0.45860428\n"," 0.45578358 0.45301282]\n","8 day output [[0.45032626]]\n","9 day input [0.26666667 0.31428571 0.32380952 0.37142857 0.4        0.40952381\n"," 0.4        0.42857143 0.40952381 0.41904762 0.5047619  0.46486622\n"," 0.4674058  0.46631029 0.46406782 0.46140844 0.45860428 0.45578358\n"," 0.45301282 0.45032626]\n","9 day output [[0.44774053]]\n","10 day input [0.31428571 0.32380952 0.37142857 0.4        0.40952381 0.4\n"," 0.42857143 0.40952381 0.41904762 0.5047619  0.46486622 0.4674058\n"," 0.46631029 0.46406782 0.46140844 0.45860428 0.45578358 0.45301282\n"," 0.45032626 0.44774053]\n","10 day output [[0.44526199]]\n","11 day input [0.32380952 0.37142857 0.4        0.40952381 0.4        0.42857143\n"," 0.40952381 0.41904762 0.5047619  0.46486622 0.4674058  0.46631029\n"," 0.46406782 0.46140844 0.45860428 0.45578358 0.45301282 0.45032626\n"," 0.44774053 0.44526199]\n","11 day output [[0.44289157]]\n","12 day input [0.37142857 0.4        0.40952381 0.4        0.42857143 0.40952381\n"," 0.41904762 0.5047619  0.46486622 0.4674058  0.46631029 0.46406782\n"," 0.46140844 0.45860428 0.45578358 0.45301282 0.45032626 0.44774053\n"," 0.44526199 0.44289157]\n","12 day output [[0.44062802]]\n","13 day input [0.4        0.40952381 0.4        0.42857143 0.40952381 0.41904762\n"," 0.5047619  0.46486622 0.4674058  0.46631029 0.46406782 0.46140844\n"," 0.45860428 0.45578358 0.45301282 0.45032626 0.44774053 0.44526199\n"," 0.44289157 0.44062802]\n","13 day output [[0.4384676]]\n","14 day input [0.40952381 0.4        0.42857143 0.40952381 0.41904762 0.5047619\n"," 0.46486622 0.4674058  0.46631029 0.46406782 0.46140844 0.45860428\n"," 0.45578358 0.45301282 0.45032626 0.44774053 0.44526199 0.44289157\n"," 0.44062802 0.43846759]\n","14 day output [[0.4364065]]\n","15 day input [0.4        0.42857143 0.40952381 0.41904762 0.5047619  0.46486622\n"," 0.4674058  0.46631029 0.46406782 0.46140844 0.45860428 0.45578358\n"," 0.45301282 0.45032626 0.44774053 0.44526199 0.44289157 0.44062802\n"," 0.43846759 0.43640649]\n","15 day output [[0.43444037]]\n","16 day input [0.42857143 0.40952381 0.41904762 0.5047619  0.46486622 0.4674058\n"," 0.46631029 0.46406782 0.46140844 0.45860428 0.45578358 0.45301282\n"," 0.45032626 0.44774053 0.44526199 0.44289157 0.44062802 0.43846759\n"," 0.43640649 0.43444037]\n","16 day output [[0.43256494]]\n","17 day input [0.40952381 0.41904762 0.5047619  0.46486622 0.4674058  0.46631029\n"," 0.46406782 0.46140844 0.45860428 0.45578358 0.45301282 0.45032626\n"," 0.44774053 0.44526199 0.44289157 0.44062802 0.43846759 0.43640649\n"," 0.43444037 0.43256494]\n","17 day output [[0.4307757]]\n","18 day input [0.41904762 0.5047619  0.46486622 0.4674058  0.46631029 0.46406782\n"," 0.46140844 0.45860428 0.45578358 0.45301282 0.45032626 0.44774053\n"," 0.44526199 0.44289157 0.44062802 0.43846759 0.43640649 0.43444037\n"," 0.43256494 0.4307757 ]\n","18 day output [[0.4290687]]\n","19 day input [0.5047619  0.46486622 0.4674058  0.46631029 0.46406782 0.46140844\n"," 0.45860428 0.45578358 0.45301282 0.45032626 0.44774053 0.44526199\n"," 0.44289157 0.44062802 0.43846759 0.43640649 0.43444037 0.43256494\n"," 0.4307757  0.42906871]\n","19 day output [[0.42744005]]\n","20 day input [0.46486622 0.4674058  0.46631029 0.46406782 0.46140844 0.45860428\n"," 0.45578358 0.45301282 0.45032626 0.44774053 0.44526199 0.44289157\n"," 0.44062802 0.43846759 0.43640649 0.43444037 0.43256494 0.4307757\n"," 0.42906871 0.42744005]\n","20 day output [[0.4258852]]\n","21 day input [0.4674058  0.46631029 0.46406782 0.46140844 0.45860428 0.45578358\n"," 0.45301282 0.45032626 0.44774053 0.44526199 0.44289157 0.44062802\n"," 0.43846759 0.43640649 0.43444037 0.43256494 0.4307757  0.42906871\n"," 0.42744005 0.4258852 ]\n","21 day output [[0.42440128]]\n","22 day input [0.46631029 0.46406782 0.46140844 0.45860428 0.45578358 0.45301282\n"," 0.45032626 0.44774053 0.44526199 0.44289157 0.44062802 0.43846759\n"," 0.43640649 0.43444037 0.43256494 0.4307757  0.42906871 0.42744005\n"," 0.4258852  0.42440128]\n","22 day output [[0.42298448]]\n","23 day input [0.46406782 0.46140844 0.45860428 0.45578358 0.45301282 0.45032626\n"," 0.44774053 0.44526199 0.44289157 0.44062802 0.43846759 0.43640649\n"," 0.43444037 0.43256494 0.4307757  0.42906871 0.42744005 0.4258852\n"," 0.42440128 0.42298448]\n","23 day output [[0.42163166]]\n","24 day input [0.46140844 0.45860428 0.45578358 0.45301282 0.45032626 0.44774053\n"," 0.44526199 0.44289157 0.44062802 0.43846759 0.43640649 0.43444037\n"," 0.43256494 0.4307757  0.42906871 0.42744005 0.4258852  0.42440128\n"," 0.42298448 0.42163166]\n","24 day output [[0.42033973]]\n","25 day input [0.45860428 0.45578358 0.45301282 0.45032626 0.44774053 0.44526199\n"," 0.44289157 0.44062802 0.43846759 0.43640649 0.43444037 0.43256494\n"," 0.4307757  0.42906871 0.42744005 0.4258852  0.42440128 0.42298448\n"," 0.42163166 0.42033973]\n","25 day output [[0.41910583]]\n","26 day input [0.45578358 0.45301282 0.45032626 0.44774053 0.44526199 0.44289157\n"," 0.44062802 0.43846759 0.43640649 0.43444037 0.43256494 0.4307757\n"," 0.42906871 0.42744005 0.4258852  0.42440128 0.42298448 0.42163166\n"," 0.42033973 0.41910583]\n","26 day output [[0.4179272]]\n","27 day input [0.45301282 0.45032626 0.44774053 0.44526199 0.44289157 0.44062802\n"," 0.43846759 0.43640649 0.43444037 0.43256494 0.4307757  0.42906871\n"," 0.42744005 0.4258852  0.42440128 0.42298448 0.42163166 0.42033973\n"," 0.41910583 0.41792721]\n","27 day output [[0.41680118]]\n","28 day input [0.45032626 0.44774053 0.44526199 0.44289157 0.44062802 0.43846759\n"," 0.43640649 0.43444037 0.43256494 0.4307757  0.42906871 0.42744005\n"," 0.4258852  0.42440128 0.42298448 0.42163166 0.42033973 0.41910583\n"," 0.41792721 0.41680118]\n","28 day output [[0.41572538]]\n","29 day input [0.44774053 0.44526199 0.44289157 0.44062802 0.43846759 0.43640649\n"," 0.43444037 0.43256494 0.4307757  0.42906871 0.42744005 0.4258852\n"," 0.42440128 0.42298448 0.42163166 0.42033973 0.41910583 0.41792721\n"," 0.41680118 0.41572538]\n","29 day output [[0.41469735]]\n"]}]},{"cell_type":"code","source":["print(scaler.inverse_transform(lst_output))"],"metadata":{"id":"URxIuoqi7Dlp","executionInfo":{"status":"ok","timestamp":1704856916291,"user_tz":-420,"elapsed":626,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"a445b163-b9bb-4da4-fdbf-6bd4a6f5f82d"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["[[23540.54765999]\n"," [23553.88042927]\n"," [23548.12903553]\n"," [23536.35603786]\n"," [23522.39429057]\n"," [23507.67244995]\n"," [23492.86377281]\n"," [23478.31732631]\n"," [23464.2128855 ]\n"," [23450.63775629]\n"," [23437.62542158]\n"," [23425.18073171]\n"," [23413.29711527]\n"," [23401.95485801]\n"," [23391.13408923]\n"," [23380.81196547]\n"," [23370.96595615]\n"," [23361.5724355 ]\n"," [23352.6107505 ]\n"," [23344.06024814]\n"," [23335.89730263]\n"," [23328.10673714]\n"," [23320.6685245 ]\n"," [23313.5662362 ]\n"," [23306.78360015]\n"," [23300.30559599]\n"," [23294.1178292 ]\n"," [23288.20621818]\n"," [23282.55824596]\n"," [23277.16108263]]\n"]}]},{"cell_type":"markdown","source":["<h1>Vẽ hình mô tả dự đoán"],"metadata":{"id":"ncMChIbkxjBm"}},{"cell_type":"code","source":["#Drawing plot\n","train_data_index = pd.RangeIndex(start=0, stop=train_size, step=1)\n","plt.plot(scaler.inverse_transform(train_data))\n","test_data_index = pd.RangeIndex(start=train_size, stop=train_size+test_size, step=1)\n","plt.plot(test_data_index,scaler.inverse_transform(test_data))\n","test_data_index = pd.RangeIndex(start=train_size+21, stop=train_size+test_size, step=1)\n","plt.plot(test_data_index,(y_pred))\n","val_data_index = pd.RangeIndex(start=train_size+test_size, stop=train_size+test_size+val_size, step=1)\n","plt.plot(val_data_index,scaler.inverse_transform(val_data))\n","val_data_index = pd.RangeIndex(start=train_size+test_size+21, stop=train_size+test_size+val_size, step=1)\n","plt.plot(val_data_index,y_pred_val)\n","prediect_data_index = pd.RangeIndex(start=len(ACB1)-1, stop=len(ACB1)+29, step=1)\n","plt.plot(prediect_data_index,scaler.inverse_transform(lst_output))\n","plt.legend(['Train','Test','Test Predictions ','Validate','Validate Predictions','Next30days Predictions'])\n","plt.title(\"Dự đoán giá cổ phiếu ACB trong 30 ngày kế tiếp theo tỉ lệ 7-2-1\")\n","plt.show()"],"metadata":{"id":"JH9v4Vo4QIbr","executionInfo":{"status":"ok","timestamp":1704856916291,"user_tz":-420,"elapsed":7,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"colab":{"base_uri":"https://localhost:8080/","height":454},"outputId":"72774854-613c-41a6-9652-4739acd63fef"},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}