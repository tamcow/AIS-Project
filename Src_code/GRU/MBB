{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1qnE4JcepE0RJQ2oIzjbyHtOLrEi77jCI","timestamp":1697125232108},{"file_id":"1GHR5tTHO0uMu-uzYC9OcNcNjGg8Sbvp7","timestamp":1697083417178}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 1. Kết nối tới drive , import một số thư viện cần thiết"],"metadata":{"id":"7-epYAdnrvEv"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"mK9bDo96rCS3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860467989,"user_tz":-420,"elapsed":2972,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"2fa4849d-ea2b-426f-9f19-c51c74339a8a"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","execution_count":4,"metadata":{"id":"x7N0Kb9pOhyW","executionInfo":{"status":"ok","timestamp":1704860474487,"user_tz":-420,"elapsed":6502,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"outputs":[],"source":["import numpy.polynomial.polynomial as poly\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","\n","\n","from datetime import datetime\n","from sklearn.metrics import r2_score\n","from sklearn.metrics import mean_squared_error, mean_absolute_error\n","from sklearn.preprocessing import MinMaxScaler, StandardScaler\n","from sklearn.utils import column_or_1d\n","\n","from keras.models import Sequential\n","from keras.layers import Dense, GRU"]},{"cell_type":"code","source":["MBB = pd.read_csv(\"/content/drive/MyDrive/MBB.csv\")"],"metadata":{"id":"4NcZE4PqOoUH","executionInfo":{"status":"ok","timestamp":1704860475080,"user_tz":-420,"elapsed":607,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["MBB"],"metadata":{"id":"JV-AX3mOO8T7","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1704860475080,"user_tz":-420,"elapsed":17,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"d4f6e68a-ab71-4f1e-f170-615a6df5d905"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date    Price     Open     High      Low        Vol.  Change %\n","0    2023-01-03  18000.0  17200.0  18000.0  17200.0   7540000.0  0.278552\n","1    2023-01-04  17950.0  18100.0  18250.0  17950.0   7750000.0 -1.373626\n","2    2023-01-05  18200.0  18000.0  18250.0  17800.0   7750000.0 -1.086957\n","3    2023-01-06  18400.0  19450.0  19450.0  17250.0  10650000.0  0.821918\n","4    2023-01-09  18250.0  18500.0  18500.0  18200.0   5950000.0  0.274725\n","..          ...      ...      ...      ...      ...         ...       ...\n","244  2023-12-25  18400.0  18350.0  18550.0  18300.0   6590000.0 -0.271003\n","245  2023-12-26  18450.0  18400.0  18500.0  18300.0   4260000.0  0.271739\n","246  2023-12-27  18400.0  18500.0  18500.0  18350.0   5780000.0 -0.808625\n","247  2023-12-28  18550.0  18400.0  18600.0  18350.0   9880000.0 -0.536193\n","248  2023-12-29  18650.0  18600.0  18850.0  18550.0  14549210.0       NaN\n","\n","[249 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-d3b1e334-6d8b-4999-a9f8-33f439365b09\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-01-03</td>\n","      <td>18000.0</td>\n","      <td>17200.0</td>\n","      <td>18000.0</td>\n","      <td>17200.0</td>\n","      <td>7540000.0</td>\n","      <td>0.278552</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-01-04</td>\n","      <td>17950.0</td>\n","      <td>18100.0</td>\n","      <td>18250.0</td>\n","      <td>17950.0</td>\n","      <td>7750000.0</td>\n","      <td>-1.373626</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-01-05</td>\n","      <td>18200.0</td>\n","      <td>18000.0</td>\n","      <td>18250.0</td>\n","      <td>17800.0</td>\n","      <td>7750000.0</td>\n","      <td>-1.086957</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-01-06</td>\n","      <td>18400.0</td>\n","      <td>19450.0</td>\n","      <td>19450.0</td>\n","      <td>17250.0</td>\n","      <td>10650000.0</td>\n","      <td>0.821918</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-01-09</td>\n","      <td>18250.0</td>\n","      <td>18500.0</td>\n","      <td>18500.0</td>\n","      <td>18200.0</td>\n","      <td>5950000.0</td>\n","      <td>0.274725</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>244</th>\n","      <td>2023-12-25</td>\n","      <td>18400.0</td>\n","      <td>18350.0</td>\n","      <td>18550.0</td>\n","      <td>18300.0</td>\n","      <td>6590000.0</td>\n","      <td>-0.271003</td>\n","    </tr>\n","    <tr>\n","      <th>245</th>\n","      <td>2023-12-26</td>\n","      <td>18450.0</td>\n","      <td>18400.0</td>\n","      <td>18500.0</td>\n","      <td>18300.0</td>\n","      <td>4260000.0</td>\n","      <td>0.271739</td>\n","    </tr>\n","    <tr>\n","      <th>246</th>\n","      <td>2023-12-27</td>\n","      <td>18400.0</td>\n","      <td>18500.0</td>\n","      <td>18500.0</td>\n","      <td>18350.0</td>\n","      <td>5780000.0</td>\n","      <td>-0.808625</td>\n","    </tr>\n","    <tr>\n","      <th>247</th>\n","      <td>2023-12-28</td>\n","      <td>18550.0</td>\n","      <td>18400.0</td>\n","      <td>18600.0</td>\n","      <td>18350.0</td>\n","      <td>9880000.0</td>\n","      <td>-0.536193</td>\n","    </tr>\n","    <tr>\n","      <th>248</th>\n","      <td>2023-12-29</td>\n","      <td>18650.0</td>\n","      <td>18600.0</td>\n","      <td>18850.0</td>\n","      <td>18550.0</td>\n","      <td>14549210.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>249 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3b1e334-6d8b-4999-a9f8-33f439365b09')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d3b1e334-6d8b-4999-a9f8-33f439365b09 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d3b1e334-6d8b-4999-a9f8-33f439365b09');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e0c0000c-0a09-46a2-b69d-ddc82604acdb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0c0000c-0a09-46a2-b69d-ddc82604acdb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e0c0000c-0a09-46a2-b69d-ddc82604acdb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a43a4cd6-e578-43c8-88de-12982d8c4388\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('MBB')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a43a4cd6-e578-43c8-88de-12982d8c4388 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('MBB');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["MBB.info()"],"metadata":{"id":"Lj99cSN5rG4u","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860475081,"user_tz":-420,"elapsed":16,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"50be9214-f518-408a-b85f-2dcadac1f61a"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 249 entries, 0 to 248\n","Data columns (total 7 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Date      249 non-null    object \n"," 1   Price     249 non-null    float64\n"," 2   Open      249 non-null    float64\n"," 3   High      249 non-null    float64\n"," 4   Low       249 non-null    float64\n"," 5   Vol.      249 non-null    float64\n"," 6   Change %  248 non-null    float64\n","dtypes: float64(6), object(1)\n","memory usage: 13.7+ KB\n"]}]},{"cell_type":"markdown","source":["# 2. Tiền xử lý dữ liệu"],"metadata":{"id":"n7Kzv8I3rqLZ"}},{"cell_type":"markdown","source":["### Loại bỏ một số dữ liệu trống trong dataset"],"metadata":{"id":"ovfqfYQ1r7Mt"}},{"cell_type":"code","source":["# Drop missing values\n","MBB = MBB.dropna()"],"metadata":{"id":"y9KGNmaFPNat","executionInfo":{"status":"ok","timestamp":1704860475081,"user_tz":-420,"elapsed":14,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["MBB1 = MBB.reset_index()['Price']"],"metadata":{"id":"-TCtieoePNgm","executionInfo":{"status":"ok","timestamp":1704860475081,"user_tz":-420,"elapsed":14,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["MBB['Index'] = np.arange(len(MBB.index))\n","\n","\n"],"metadata":{"id":"qMRscjafPNjp","executionInfo":{"status":"ok","timestamp":1704860475082,"user_tz":-420,"elapsed":15,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"611d5ec8-c25f-4c84-a37e-ffddeea40c2b"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-10-bbc048a932ba>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  MBB['Index'] = np.arange(len(MBB.index))\n"]}]},{"cell_type":"markdown","source":["<h1> 3.Scale dữ liệu"],"metadata":{"id":"VVEZNAFepzSx"}},{"cell_type":"code","source":["scaler=MinMaxScaler(feature_range=(0,1))\n","MBB1=scaler.fit_transform(np.array(MBB1).reshape(-1,1))"],"metadata":{"id":"G-s3Ci_Op24W","executionInfo":{"status":"ok","timestamp":1704860475082,"user_tz":-420,"elapsed":13,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["# 4. Chia tập dữ liệu để train-test-validate theo tỉ lệ 7:2:1"],"metadata":{"id":"QfL_QnOzsfRX"}},{"cell_type":"code","source":["# Split the data into training, testing, and validation sets\n","train_size = int(0.7 * len(MBB1))\n","test_size = int(0.2 * len(MBB1))\n","val_size = len(MBB1) - train_size - test_size"],"metadata":{"id":"rq0DYR5nPde7","executionInfo":{"status":"ok","timestamp":1704860475082,"user_tz":-420,"elapsed":13,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["train_data = MBB1[:train_size]\n","test_data = MBB1[train_size:train_size+test_size]\n","val_data = MBB1[train_size+test_size:]"],"metadata":{"id":"OHHVGbyLPom3","executionInfo":{"status":"ok","timestamp":1704860475082,"user_tz":-420,"elapsed":13,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["<h1>Hàm Create Dataset"],"metadata":{"id":"7wuXUGKRtFIp"}},{"cell_type":"code","source":["#Chuyển mảng giá trị của dataset thành ma trận\n","def create_dataset(dataset, time_step=1):\n","\tdataX, dataY = [], []\n","\tfor i in range(len(dataset)-time_step-1):\n","\t\ta = dataset[i:(i+time_step), 0]\n","\t\tdataX.append(a)\n","\t\tdataY.append(dataset[i + time_step, 0])\n","\treturn numpy.array(dataX), numpy.array(dataY)"],"metadata":{"id":"0x5fnQwxs2K8","executionInfo":{"status":"ok","timestamp":1704860475083,"user_tz":-420,"elapsed":14,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["import numpy\n","#Reshape into X=t,t+1, t+2... t+20 and Y= t+20\n","time_step = 20\n","X_train, y_train = create_dataset(train_data, time_step)\n","X_val, yval = create_dataset(val_data, time_step)\n","X_test, ytest = create_dataset(test_data, time_step)"],"metadata":{"id":"vYHWGCZrHFOJ","executionInfo":{"status":"ok","timestamp":1704860475083,"user_tz":-420,"elapsed":13,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["#Reshape input to be [samples, time steps, features] which is required for LSTM\n","X_train =X_train.reshape(X_train.shape[0],X_train.shape[1] , 1)\n","X_test = X_test.reshape(X_test.shape[0],X_test.shape[1] , 1)\n","X_val = X_val.reshape(X_val.shape[0],X_val.shape[1] , 1)"],"metadata":{"id":"VVP0KnNsHhh-","executionInfo":{"status":"ok","timestamp":1704860475083,"user_tz":-420,"elapsed":13,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["#Define GRU model\n","model = Sequential()\n","model.add(GRU(64, input_shape=(time_step, 1)))\n","model.add(Dense(1))\n","model.compile(optimizer='adam', loss='mean_squared_error')"],"metadata":{"id":"TvXQkvakHqVc","executionInfo":{"status":"ok","timestamp":1704860475734,"user_tz":-420,"elapsed":665,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["#Model fitting\n","model.fit(X_train,y_train,validation_data=(X_test,ytest),epochs=100,batch_size=64,verbose=1)"],"metadata":{"id":"qamlhrLuH21t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860487670,"user_tz":-420,"elapsed":11937,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"7cfbc522-7615-4002-b3c1-02a7f6e4aca1"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","3/3 [==============================] - 3s 286ms/step - loss: 0.1927 - val_loss: 0.0076\n","Epoch 2/100\n","3/3 [==============================] - 0s 30ms/step - loss: 0.1285 - val_loss: 0.0030\n","Epoch 3/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0803 - val_loss: 0.0050\n","Epoch 4/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0442 - val_loss: 0.0154\n","Epoch 5/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0285 - val_loss: 0.0330\n","Epoch 6/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0298 - val_loss: 0.0438\n","Epoch 7/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0333 - val_loss: 0.0383\n","Epoch 8/100\n","3/3 [==============================] - 0s 31ms/step - loss: 0.0283 - val_loss: 0.0275\n","Epoch 9/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0223 - val_loss: 0.0181\n","Epoch 10/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0188 - val_loss: 0.0123\n","Epoch 11/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0182 - val_loss: 0.0090\n","Epoch 12/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0177 - val_loss: 0.0076\n","Epoch 13/100\n","3/3 [==============================] - 0s 30ms/step - loss: 0.0167 - val_loss: 0.0072\n","Epoch 14/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0152 - val_loss: 0.0074\n","Epoch 15/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0139 - val_loss: 0.0075\n","Epoch 16/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0129 - val_loss: 0.0071\n","Epoch 17/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0122 - val_loss: 0.0063\n","Epoch 18/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0116 - val_loss: 0.0054\n","Epoch 19/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0111 - val_loss: 0.0046\n","Epoch 20/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0106 - val_loss: 0.0040\n","Epoch 21/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0104 - val_loss: 0.0035\n","Epoch 22/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0101 - val_loss: 0.0030\n","Epoch 23/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0100 - val_loss: 0.0026\n","Epoch 24/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0099 - val_loss: 0.0025\n","Epoch 25/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0097 - val_loss: 0.0025\n","Epoch 26/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0095 - val_loss: 0.0025\n","Epoch 27/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0093 - val_loss: 0.0026\n","Epoch 28/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0092 - val_loss: 0.0027\n","Epoch 29/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0091 - val_loss: 0.0028\n","Epoch 30/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0090 - val_loss: 0.0028\n","Epoch 31/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0089 - val_loss: 0.0027\n","Epoch 32/100\n","3/3 [==============================] - 0s 30ms/step - loss: 0.0088 - val_loss: 0.0025\n","Epoch 33/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0086 - val_loss: 0.0024\n","Epoch 34/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0085 - val_loss: 0.0024\n","Epoch 35/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0085 - val_loss: 0.0024\n","Epoch 36/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0083 - val_loss: 0.0023\n","Epoch 37/100\n","3/3 [==============================] - 0s 31ms/step - loss: 0.0083 - val_loss: 0.0023\n","Epoch 38/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0082 - val_loss: 0.0024\n","Epoch 39/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0081 - val_loss: 0.0025\n","Epoch 40/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0080 - val_loss: 0.0025\n","Epoch 41/100\n","3/3 [==============================] - 0s 42ms/step - loss: 0.0079 - val_loss: 0.0025\n","Epoch 42/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0078 - val_loss: 0.0025\n","Epoch 43/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0077 - val_loss: 0.0024\n","Epoch 44/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0076 - val_loss: 0.0024\n","Epoch 45/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0075 - val_loss: 0.0024\n","Epoch 46/100\n","3/3 [==============================] - 0s 30ms/step - loss: 0.0075 - val_loss: 0.0023\n","Epoch 47/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0074 - val_loss: 0.0022\n","Epoch 48/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0074 - val_loss: 0.0021\n","Epoch 49/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0074 - val_loss: 0.0021\n","Epoch 50/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0072 - val_loss: 0.0023\n","Epoch 51/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0071 - val_loss: 0.0025\n","Epoch 52/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0072 - val_loss: 0.0027\n","Epoch 53/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0072 - val_loss: 0.0026\n","Epoch 54/100\n","3/3 [==============================] - 0s 31ms/step - loss: 0.0070 - val_loss: 0.0023\n","Epoch 55/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0069 - val_loss: 0.0021\n","Epoch 56/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0069 - val_loss: 0.0021\n","Epoch 57/100\n","3/3 [==============================] - 0s 31ms/step - loss: 0.0068 - val_loss: 0.0021\n","Epoch 58/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0067 - val_loss: 0.0022\n","Epoch 59/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0067 - val_loss: 0.0024\n","Epoch 60/100\n","3/3 [==============================] - 0s 30ms/step - loss: 0.0066 - val_loss: 0.0024\n","Epoch 61/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0065 - val_loss: 0.0023\n","Epoch 62/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0065 - val_loss: 0.0022\n","Epoch 63/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0064 - val_loss: 0.0021\n","Epoch 64/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0064 - val_loss: 0.0021\n","Epoch 65/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0063 - val_loss: 0.0022\n","Epoch 66/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0062 - val_loss: 0.0021\n","Epoch 67/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0062 - val_loss: 0.0021\n","Epoch 68/100\n","3/3 [==============================] - 0s 33ms/step - loss: 0.0061 - val_loss: 0.0022\n","Epoch 69/100\n","3/3 [==============================] - 0s 30ms/step - loss: 0.0061 - val_loss: 0.0023\n","Epoch 70/100\n","3/3 [==============================] - 0s 47ms/step - loss: 0.0060 - val_loss: 0.0022\n","Epoch 71/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0060 - val_loss: 0.0022\n","Epoch 72/100\n","3/3 [==============================] - 0s 46ms/step - loss: 0.0059 - val_loss: 0.0021\n","Epoch 73/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0059 - val_loss: 0.0021\n","Epoch 74/100\n","3/3 [==============================] - 0s 45ms/step - loss: 0.0059 - val_loss: 0.0020\n","Epoch 75/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0058 - val_loss: 0.0020\n","Epoch 76/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0058 - val_loss: 0.0019\n","Epoch 77/100\n","3/3 [==============================] - 0s 45ms/step - loss: 0.0058 - val_loss: 0.0019\n","Epoch 78/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0058 - val_loss: 0.0020\n","Epoch 79/100\n","3/3 [==============================] - 0s 48ms/step - loss: 0.0057 - val_loss: 0.0020\n","Epoch 80/100\n","3/3 [==============================] - 0s 43ms/step - loss: 0.0057 - val_loss: 0.0022\n","Epoch 81/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0056 - val_loss: 0.0022\n","Epoch 82/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0056 - val_loss: 0.0020\n","Epoch 83/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0055 - val_loss: 0.0019\n","Epoch 84/100\n","3/3 [==============================] - 0s 42ms/step - loss: 0.0056 - val_loss: 0.0019\n","Epoch 85/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0055 - val_loss: 0.0021\n","Epoch 86/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0054 - val_loss: 0.0022\n","Epoch 87/100\n","3/3 [==============================] - 0s 53ms/step - loss: 0.0055 - val_loss: 0.0021\n","Epoch 88/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0054 - val_loss: 0.0019\n","Epoch 89/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0053 - val_loss: 0.0018\n","Epoch 90/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0053 - val_loss: 0.0018\n","Epoch 91/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0053 - val_loss: 0.0018\n","Epoch 92/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0052 - val_loss: 0.0018\n","Epoch 93/100\n","3/3 [==============================] - 0s 45ms/step - loss: 0.0053 - val_loss: 0.0018\n","Epoch 94/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0053 - val_loss: 0.0018\n","Epoch 95/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0052 - val_loss: 0.0021\n","Epoch 96/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0051 - val_loss: 0.0022\n","Epoch 97/100\n","3/3 [==============================] - 0s 41ms/step - loss: 0.0052 - val_loss: 0.0023\n","Epoch 98/100\n","3/3 [==============================] - 0s 48ms/step - loss: 0.0052 - val_loss: 0.0021\n","Epoch 99/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0051 - val_loss: 0.0019\n","Epoch 100/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0051 - val_loss: 0.0017\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7f7f1af99b40>"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["<h1>Dự báo dữ liệu test, val"],"metadata":{"id":"BoCSCZfvtSoK"}},{"cell_type":"code","source":["train_predict=model.predict(X_train)\n","y_pred=model.predict(X_test)\n","y_pred_val=model.predict(X_val)"],"metadata":{"id":"PXdaljDYPoso","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860488715,"user_tz":-420,"elapsed":1048,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"45b85fe1-37ef-423d-fa20-ec892d145c2e"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["5/5 [==============================] - 1s 6ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 32ms/step\n"]}]},{"cell_type":"markdown","source":["<h1>Chuẩn hóa dữ liệu"],"metadata":{"id":"BgyCaXcjt--_"}},{"cell_type":"code","source":["#Chuẩn hóa dữ liệu y_pred, y_pred_val\n","train_predict=scaler.inverse_transform(train_predict)\n","y_pred=scaler.inverse_transform(y_pred)\n","y_pred_val=scaler.inverse_transform(y_pred_val)"],"metadata":{"id":"kpOOSDZ6QGw7","executionInfo":{"status":"ok","timestamp":1704860488716,"user_tz":-420,"elapsed":16,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["ytest = scaler.inverse_transform(ytest.reshape(-1,1))\n","ytest"],"metadata":{"id":"5bcSO5wiPSE6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860488716,"user_tz":-420,"elapsed":15,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"4c09bc59-80f3-4764-ae3b-919b678baf6c"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[18450.],\n","       [18200.],\n","       [18100.],\n","       [17750.],\n","       [17650.],\n","       [17950.],\n","       [17800.],\n","       [17900.],\n","       [17800.],\n","       [17200.],\n","       [17450.],\n","       [17000.],\n","       [17100.],\n","       [17200.],\n","       [17700.],\n","       [17400.],\n","       [17950.],\n","       [17800.],\n","       [18350.],\n","       [18350.],\n","       [18000.],\n","       [18100.],\n","       [18450.],\n","       [18550.],\n","       [18500.],\n","       [18200.],\n","       [18000.],\n","       [18100.]])"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["yval = scaler.inverse_transform(yval.reshape(-1,1))\n","yval"],"metadata":{"id":"kvXio7uyPdXD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860488716,"user_tz":-420,"elapsed":13,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"a30b8553-6ca9-428a-a460-5db03ac516b9"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[18150.],\n","       [18300.],\n","       [18400.],\n","       [18450.],\n","       [18400.]])"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["<h1>Đánh giá độ chính xác của thuật toán"],"metadata":{"id":"v3wMG4FGEdsG"}},{"cell_type":"code","source":["# RMSE\n","valid_rmse = np.sqrt(np.mean((y_pred_val - yval)**2))\n","test_rmse = np.sqrt(np.mean((y_pred - ytest)**2))\n","print('Validation RMSE:', valid_rmse)\n","print('Testing RMSE:', test_rmse)"],"metadata":{"id":"lCzRkwcDPzAg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860488716,"user_tz":-420,"elapsed":11,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"dc426025-4091-468e-d48d-f0282e51f0c0"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation RMSE: 84.2967682478037\n","Testing RMSE: 306.46992499918895\n"]}]},{"cell_type":"code","source":["#MAE\n","valid_mae = mean_absolute_error(yval,y_pred_val)\n","test_mae = mean_absolute_error(ytest, y_pred)\n","print('Validation MAE:', valid_mae)\n","print('Testing MAE:', test_mae)"],"metadata":{"id":"_EpYLbfDW1Fk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860488716,"user_tz":-420,"elapsed":9,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"ce863f84-f269-42d6-d684-a9e0f41794ca"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation MAE: 76.06875\n","Testing MAE: 246.12548828125\n"]}]},{"cell_type":"code","source":["#MAPE\n","valid_mape = np.mean(np.abs((yval - y_pred_val) / yval))*100\n","test_mape = np.mean(np.abs((ytest - y_pred) / ytest))*100\n","print('Validation MAPE:', valid_mape)\n","print('Testing MAPE:', test_mape)"],"metadata":{"id":"h9Jvo9-5wuLl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860488716,"user_tz":-420,"elapsed":5,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"08714c27-788f-435a-bbd4-d370d829810f"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation MAPE: 0.4141152297006922\n","Testing MAPE: 1.3809128827586752\n"]}]},{"cell_type":"markdown","source":["<h1>Quá trình dự đoán giá cổ phiếu trong 30 ngày tiếp theo"],"metadata":{"id":"FStBXaC5uHfR"}},{"cell_type":"code","source":["x_input=val_data[5:].reshape(1,-1)\n","x_input.shape\n","\n","temp_input=list(x_input)\n","temp_input=temp_input[0].tolist()\n","\n","from numpy import array\n","\n","lst_output=[]\n","n_steps=20\n","i=0\n","while(i<30):\n","\n","    if(len(temp_input)>20):\n","        #print(temp_input)\n","        x_input=np.array(temp_input[1:])\n","        print(\"{} day input {}\".format(i,x_input))\n","        x_input=x_input.reshape(1,-1)\n","        x_input = x_input.reshape((1, n_steps, 1))\n","        #print(x_input)\n","        yhat = model.predict(x_input, verbose=0)\n","        print(\"{} day output {}\".format(i,yhat))\n","        temp_input.extend(yhat[0].tolist())\n","        temp_input=temp_input[1:]\n","        #print(temp_input)\n","        lst_output.extend(yhat.tolist())\n","        i=i+1\n","    else:\n","        x_input = x_input.reshape((1,n_steps,1))\n","        yhat = model.predict(x_input, verbose=0)\n","        print(yhat[0])\n","        temp_input.extend(yhat[0].tolist())\n","        print(len(temp_input))\n","        lst_output.extend(yhat.tolist())\n","        i=i+1\n"],"metadata":{"id":"-zckNSHFPdh4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860491717,"user_tz":-420,"elapsed":3004,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"dbe7b843-ad58-4fb0-97d2-3c4271590f02"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["0 day input [0.10840108 0.14227642 0.14227642 0.14905149 0.16937669 0.16260163\n"," 0.15582656 0.16937669 0.14227642 0.14227642 0.14227642 0.13550136\n"," 0.15582656 0.15582656 0.15582656 0.17615176 0.1897019  0.19647696\n"," 0.1897019  0.2100271 ]\n","0 day output [[0.20785801]]\n","1 day input [0.14227642 0.14227642 0.14905149 0.16937669 0.16260163 0.15582656\n"," 0.16937669 0.14227642 0.14227642 0.14227642 0.13550136 0.15582656\n"," 0.15582656 0.15582656 0.17615176 0.1897019  0.19647696 0.1897019\n"," 0.2100271  0.20785801]\n","1 day output [[0.2123928]]\n","2 day input [0.14227642 0.14905149 0.16937669 0.16260163 0.15582656 0.16937669\n"," 0.14227642 0.14227642 0.14227642 0.13550136 0.15582656 0.15582656\n"," 0.15582656 0.17615176 0.1897019  0.19647696 0.1897019  0.2100271\n"," 0.20785801 0.21239281]\n","2 day output [[0.21600537]]\n","3 day input [0.14905149 0.16937669 0.16260163 0.15582656 0.16937669 0.14227642\n"," 0.14227642 0.14227642 0.13550136 0.15582656 0.15582656 0.15582656\n"," 0.17615176 0.1897019  0.19647696 0.1897019  0.2100271  0.20785801\n"," 0.21239281 0.21600537]\n","3 day output [[0.21922863]]\n","4 day input [0.16937669 0.16260163 0.15582656 0.16937669 0.14227642 0.14227642\n"," 0.14227642 0.13550136 0.15582656 0.15582656 0.15582656 0.17615176\n"," 0.1897019  0.19647696 0.1897019  0.2100271  0.20785801 0.21239281\n"," 0.21600537 0.21922863]\n","4 day output [[0.22223441]]\n","5 day input [0.16260163 0.15582656 0.16937669 0.14227642 0.14227642 0.14227642\n"," 0.13550136 0.15582656 0.15582656 0.15582656 0.17615176 0.1897019\n"," 0.19647696 0.1897019  0.2100271  0.20785801 0.21239281 0.21600537\n"," 0.21922863 0.22223441]\n","5 day output [[0.22508867]]\n","6 day input [0.15582656 0.16937669 0.14227642 0.14227642 0.14227642 0.13550136\n"," 0.15582656 0.15582656 0.15582656 0.17615176 0.1897019  0.19647696\n"," 0.1897019  0.2100271  0.20785801 0.21239281 0.21600537 0.21922863\n"," 0.22223441 0.22508867]\n","6 day output [[0.22782014]]\n","7 day input [0.16937669 0.14227642 0.14227642 0.14227642 0.13550136 0.15582656\n"," 0.15582656 0.15582656 0.17615176 0.1897019  0.19647696 0.1897019\n"," 0.2100271  0.20785801 0.21239281 0.21600537 0.21922863 0.22223441\n"," 0.22508867 0.22782014]\n","7 day output [[0.23044412]]\n","8 day input [0.14227642 0.14227642 0.14227642 0.13550136 0.15582656 0.15582656\n"," 0.15582656 0.17615176 0.1897019  0.19647696 0.1897019  0.2100271\n"," 0.20785801 0.21239281 0.21600537 0.21922863 0.22223441 0.22508867\n"," 0.22782014 0.23044412]\n","8 day output [[0.23296979]]\n","9 day input [0.14227642 0.14227642 0.13550136 0.15582656 0.15582656 0.15582656\n"," 0.17615176 0.1897019  0.19647696 0.1897019  0.2100271  0.20785801\n"," 0.21239281 0.21600537 0.21922863 0.22223441 0.22508867 0.22782014\n"," 0.23044412 0.23296979]\n","9 day output [[0.23540342]]\n","10 day input [0.14227642 0.13550136 0.15582656 0.15582656 0.15582656 0.17615176\n"," 0.1897019  0.19647696 0.1897019  0.2100271  0.20785801 0.21239281\n"," 0.21600537 0.21922863 0.22223441 0.22508867 0.22782014 0.23044412\n"," 0.23296979 0.23540342]\n","10 day output [[0.23774984]]\n","11 day input [0.13550136 0.15582656 0.15582656 0.15582656 0.17615176 0.1897019\n"," 0.19647696 0.1897019  0.2100271  0.20785801 0.21239281 0.21600537\n"," 0.21922863 0.22223441 0.22508867 0.22782014 0.23044412 0.23296979\n"," 0.23540342 0.23774984]\n","11 day output [[0.24001312]]\n","12 day input [0.15582656 0.15582656 0.15582656 0.17615176 0.1897019  0.19647696\n"," 0.1897019  0.2100271  0.20785801 0.21239281 0.21600537 0.21922863\n"," 0.22223441 0.22508867 0.22782014 0.23044412 0.23296979 0.23540342\n"," 0.23774984 0.24001312]\n","12 day output [[0.24219659]]\n","13 day input [0.15582656 0.15582656 0.17615176 0.1897019  0.19647696 0.1897019\n"," 0.2100271  0.20785801 0.21239281 0.21600537 0.21922863 0.22223441\n"," 0.22508867 0.22782014 0.23044412 0.23296979 0.23540342 0.23774984\n"," 0.24001312 0.24219659]\n","13 day output [[0.24430332]]\n","14 day input [0.15582656 0.17615176 0.1897019  0.19647696 0.1897019  0.2100271\n"," 0.20785801 0.21239281 0.21600537 0.21922863 0.22223441 0.22508867\n"," 0.22782014 0.23044412 0.23296979 0.23540342 0.23774984 0.24001312\n"," 0.24219659 0.24430332]\n","14 day output [[0.2463358]]\n","15 day input [0.17615176 0.1897019  0.19647696 0.1897019  0.2100271  0.20785801\n"," 0.21239281 0.21600537 0.21922863 0.22223441 0.22508867 0.22782014\n"," 0.23044412 0.23296979 0.23540342 0.23774984 0.24001312 0.24219659\n"," 0.24430332 0.2463358 ]\n","15 day output [[0.2482966]]\n","16 day input [0.1897019  0.19647696 0.1897019  0.2100271  0.20785801 0.21239281\n"," 0.21600537 0.21922863 0.22223441 0.22508867 0.22782014 0.23044412\n"," 0.23296979 0.23540342 0.23774984 0.24001312 0.24219659 0.24430332\n"," 0.2463358  0.2482966 ]\n","16 day output [[0.25018793]]\n","17 day input [0.19647696 0.1897019  0.2100271  0.20785801 0.21239281 0.21600537\n"," 0.21922863 0.22223441 0.22508867 0.22782014 0.23044412 0.23296979\n"," 0.23540342 0.23774984 0.24001312 0.24219659 0.24430332 0.2463358\n"," 0.2482966  0.25018793]\n","17 day output [[0.25201207]]\n","18 day input [0.1897019  0.2100271  0.20785801 0.21239281 0.21600537 0.21922863\n"," 0.22223441 0.22508867 0.22782014 0.23044412 0.23296979 0.23540342\n"," 0.23774984 0.24001312 0.24219659 0.24430332 0.2463358  0.2482966\n"," 0.25018793 0.25201207]\n","18 day output [[0.25377098]]\n","19 day input [0.2100271  0.20785801 0.21239281 0.21600537 0.21922863 0.22223441\n"," 0.22508867 0.22782014 0.23044412 0.23296979 0.23540342 0.23774984\n"," 0.24001312 0.24219659 0.24430332 0.2463358  0.2482966  0.25018793\n"," 0.25201207 0.25377098]\n","19 day output [[0.2554665]]\n","20 day input [0.20785801 0.21239281 0.21600537 0.21922863 0.22223441 0.22508867\n"," 0.22782014 0.23044412 0.23296979 0.23540342 0.23774984 0.24001312\n"," 0.24219659 0.24430332 0.2463358  0.2482966  0.25018793 0.25201207\n"," 0.25377098 0.25546649]\n","20 day output [[0.25710082]]\n","21 day input [0.21239281 0.21600537 0.21922863 0.22223441 0.22508867 0.22782014\n"," 0.23044412 0.23296979 0.23540342 0.23774984 0.24001312 0.24219659\n"," 0.24430332 0.2463358  0.2482966  0.25018793 0.25201207 0.25377098\n"," 0.25546649 0.25710082]\n","21 day output [[0.25867558]]\n","22 day input [0.21600537 0.21922863 0.22223441 0.22508867 0.22782014 0.23044412\n"," 0.23296979 0.23540342 0.23774984 0.24001312 0.24219659 0.24430332\n"," 0.2463358  0.2482966  0.25018793 0.25201207 0.25377098 0.25546649\n"," 0.25710082 0.25867558]\n","22 day output [[0.2601926]]\n","23 day input [0.21922863 0.22223441 0.22508867 0.22782014 0.23044412 0.23296979\n"," 0.23540342 0.23774984 0.24001312 0.24219659 0.24430332 0.2463358\n"," 0.2482966  0.25018793 0.25201207 0.25377098 0.25546649 0.25710082\n"," 0.25867558 0.2601926 ]\n","23 day output [[0.26165366]]\n","24 day input [0.22223441 0.22508867 0.22782014 0.23044412 0.23296979 0.23540342\n"," 0.23774984 0.24001312 0.24219659 0.24430332 0.2463358  0.2482966\n"," 0.25018793 0.25201207 0.25377098 0.25546649 0.25710082 0.25867558\n"," 0.2601926  0.26165366]\n","24 day output [[0.26306063]]\n","25 day input [0.22508867 0.22782014 0.23044412 0.23296979 0.23540342 0.23774984\n"," 0.24001312 0.24219659 0.24430332 0.2463358  0.2482966  0.25018793\n"," 0.25201207 0.25377098 0.25546649 0.25710082 0.25867558 0.2601926\n"," 0.26165366 0.26306063]\n","25 day output [[0.264415]]\n","26 day input [0.22782014 0.23044412 0.23296979 0.23540342 0.23774984 0.24001312\n"," 0.24219659 0.24430332 0.2463358  0.2482966  0.25018793 0.25201207\n"," 0.25377098 0.25546649 0.25710082 0.25867558 0.2601926  0.26165366\n"," 0.26306063 0.264415  ]\n","26 day output [[0.26571852]]\n","27 day input [0.23044412 0.23296979 0.23540342 0.23774984 0.24001312 0.24219659\n"," 0.24430332 0.2463358  0.2482966  0.25018793 0.25201207 0.25377098\n"," 0.25546649 0.25710082 0.25867558 0.2601926  0.26165366 0.26306063\n"," 0.264415   0.26571852]\n","27 day output [[0.26697284]]\n","28 day input [0.23296979 0.23540342 0.23774984 0.24001312 0.24219659 0.24430332\n"," 0.2463358  0.2482966  0.25018793 0.25201207 0.25377098 0.25546649\n"," 0.25710082 0.25867558 0.2601926  0.26165366 0.26306063 0.264415\n"," 0.26571852 0.26697284]\n","28 day output [[0.26817954]]\n","29 day input [0.23540342 0.23774984 0.24001312 0.24219659 0.24430332 0.2463358\n"," 0.2482966  0.25018793 0.25201207 0.25377098 0.25546649 0.25710082\n"," 0.25867558 0.2601926  0.26165366 0.26306063 0.264415   0.26571852\n"," 0.26697284 0.26817954]\n","29 day output [[0.26934022]]\n"]}]},{"cell_type":"code","source":["print(scaler.inverse_transform(lst_output))"],"metadata":{"id":"URxIuoqi7Dlp","executionInfo":{"status":"ok","timestamp":1704860491717,"user_tz":-420,"elapsed":11,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"482dea7a-05e6-4038-a208-b2ed176122ed"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["[[18533.99212211]\n"," [18567.45891571]\n"," [18594.11963075]\n"," [18617.9072547 ]\n"," [18640.08996814]\n"," [18661.15439087]\n"," [18681.3126561 ]\n"," [18700.67759365]\n"," [18719.31705534]\n"," [18737.27722883]\n"," [18754.59385455]\n"," [18771.29684448]\n"," [18787.41083205]\n"," [18802.95847118]\n"," [18817.95823693]\n"," [18832.42893428]\n"," [18846.38694882]\n"," [18859.84910607]\n"," [18872.82981217]\n"," [18885.34270346]\n"," [18897.4040556 ]\n"," [18909.02574539]\n"," [18920.2214092 ]\n"," [18931.00402355]\n"," [18941.38744473]\n"," [18951.38266981]\n"," [18961.00267529]\n"," [18970.25955796]\n"," [18979.16497469]\n"," [18987.7308023 ]]\n"]}]},{"cell_type":"markdown","source":["<h1>Vẽ hình mô tả dự đoán"],"metadata":{"id":"ncMChIbkxjBm"}},{"cell_type":"code","source":["#Drawing plot\n","train_data_index = pd.RangeIndex(start=0, stop=train_size, step=1)\n","plt.plot(scaler.inverse_transform(train_data))\n","test_data_index = pd.RangeIndex(start=train_size, stop=train_size+test_size, step=1)\n","plt.plot(test_data_index,scaler.inverse_transform(test_data))\n","test_data_index = pd.RangeIndex(start=train_size+21, stop=train_size+test_size, step=1)\n","plt.plot(test_data_index,(y_pred))\n","val_data_index = pd.RangeIndex(start=train_size+test_size, stop=train_size+test_size+val_size, step=1)\n","plt.plot(val_data_index,scaler.inverse_transform(val_data))\n","val_data_index = pd.RangeIndex(start=train_size+test_size+21, stop=train_size+test_size+val_size, step=1)\n","plt.plot(val_data_index,y_pred_val)\n","prediect_data_index = pd.RangeIndex(start=len(MBB1)-1, stop=len(MBB1)+29, step=1)\n","plt.plot(prediect_data_index,scaler.inverse_transform(lst_output))\n","plt.legend(['Train','Test','Test Predictions ','Validate','Validate Predictions','Next30days Predictions'])\n","plt.title(\"Dự đoán giá cổ phiếu MBB trong 30 ngày kế tiếp theo tỉ lệ 7-2-1\")\n","plt.show()"],"metadata":{"id":"JH9v4Vo4QIbr","executionInfo":{"status":"ok","timestamp":1704860492371,"user_tz":-420,"elapsed":658,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"colab":{"base_uri":"https://localhost:8080/","height":454},"outputId":"7552ead6-a796-45be-b5ac-3abee79329f2"},"execution_count":28,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["model.save('mbb_model.h5')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TgKqyq3Qlw0s","executionInfo":{"status":"ok","timestamp":1704860492371,"user_tz":-420,"elapsed":9,"user":{"displayName":"Bình Nguyễn","userId":"09536890259849512709"}},"outputId":"4e2504f4-a0f2-4f9b-b827-533b0b9933d5"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}]}]}