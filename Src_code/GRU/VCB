{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1qnE4JcepE0RJQ2oIzjbyHtOLrEi77jCI","timestamp":1697125232108},{"file_id":"1GHR5tTHO0uMu-uzYC9OcNcNjGg8Sbvp7","timestamp":1697083417178}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 1. Kết nối tới drive , import một số thư viện cần thiết"],"metadata":{"id":"7-epYAdnrvEv"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"mK9bDo96rCS3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704861099131,"user_tz":-420,"elapsed":73992,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"49e5a7b0-f9f1-4ad1-804a-ce6d35d397b7"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":2,"metadata":{"id":"x7N0Kb9pOhyW","executionInfo":{"status":"ok","timestamp":1704861104438,"user_tz":-420,"elapsed":5325,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"outputs":[],"source":["import numpy.polynomial.polynomial as poly\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","\n","\n","from datetime import datetime\n","from sklearn.metrics import r2_score\n","from sklearn.metrics import mean_squared_error, mean_absolute_error\n","from sklearn.preprocessing import MinMaxScaler, StandardScaler\n","from sklearn.utils import column_or_1d\n","\n","from keras.models import Sequential\n","from keras.layers import Dense, GRU"]},{"cell_type":"code","source":["VCB = pd.read_csv(\"/content/drive/MyDrive/UIT COURSES/Năm Tư/Kế toán/Dataset/Ngân hàng/Thuật toán/GRU/Data_bank/VCB.csv\")"],"metadata":{"id":"4NcZE4PqOoUH","executionInfo":{"status":"ok","timestamp":1704861106463,"user_tz":-420,"elapsed":2041,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["VCB"],"metadata":{"id":"JV-AX3mOO8T7","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1704861106471,"user_tz":-420,"elapsed":66,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"58a305e2-7997-4d2f-8b4b-41ea3f85e968"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date    Price     Open     High      Low     Vol.  Change %\n","0      3/1/2023  82600.0  80200.0  82600.0  80200.0  1090000 -0.241546\n","1      4/1/2023  82800.0  82900.0  82900.0  81800.0   837900 -1.428571\n","2      5/1/2023  84000.0  82800.0  84000.0  82500.0  1080000 -0.709220\n","3      6/1/2023  84600.0  84200.0  89800.0  82300.0  1080000 -2.646720\n","4      9/1/2023  86900.0  85800.0  86900.0  84800.0  1670000 -0.458190\n","..          ...      ...      ...      ...      ...      ...       ...\n","244  25/12/2023  81800.0  80900.0  81800.0  80700.0  1300000 -1.207729\n","245  26/12/2023  82800.0  82000.0  82800.0  82000.0   971200  0.120919\n","246  27/12/2023  82700.0  82900.0  83200.0  82500.0   899600 -0.120773\n","247  28/12/2023  82800.0  82700.0  83100.0  82400.0   703200  3.113325\n","248  29/12/2023  80300.0  83500.0  83900.0  80300.0  1894326       NaN\n","\n","[249 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-dd13760c-ada5-456d-812d-3581997b4d3a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3/1/2023</td>\n","      <td>82600.0</td>\n","      <td>80200.0</td>\n","      <td>82600.0</td>\n","      <td>80200.0</td>\n","      <td>1090000</td>\n","      <td>-0.241546</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4/1/2023</td>\n","      <td>82800.0</td>\n","      <td>82900.0</td>\n","      <td>82900.0</td>\n","      <td>81800.0</td>\n","      <td>837900</td>\n","      <td>-1.428571</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5/1/2023</td>\n","      <td>84000.0</td>\n","      <td>82800.0</td>\n","      <td>84000.0</td>\n","      <td>82500.0</td>\n","      <td>1080000</td>\n","      <td>-0.709220</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6/1/2023</td>\n","      <td>84600.0</td>\n","      <td>84200.0</td>\n","      <td>89800.0</td>\n","      <td>82300.0</td>\n","      <td>1080000</td>\n","      <td>-2.646720</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9/1/2023</td>\n","      <td>86900.0</td>\n","      <td>85800.0</td>\n","      <td>86900.0</td>\n","      <td>84800.0</td>\n","      <td>1670000</td>\n","      <td>-0.458190</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>244</th>\n","      <td>25/12/2023</td>\n","      <td>81800.0</td>\n","      <td>80900.0</td>\n","      <td>81800.0</td>\n","      <td>80700.0</td>\n","      <td>1300000</td>\n","      <td>-1.207729</td>\n","    </tr>\n","    <tr>\n","      <th>245</th>\n","      <td>26/12/2023</td>\n","      <td>82800.0</td>\n","      <td>82000.0</td>\n","      <td>82800.0</td>\n","      <td>82000.0</td>\n","      <td>971200</td>\n","      <td>0.120919</td>\n","    </tr>\n","    <tr>\n","      <th>246</th>\n","      <td>27/12/2023</td>\n","      <td>82700.0</td>\n","      <td>82900.0</td>\n","      <td>83200.0</td>\n","      <td>82500.0</td>\n","      <td>899600</td>\n","      <td>-0.120773</td>\n","    </tr>\n","    <tr>\n","      <th>247</th>\n","      <td>28/12/2023</td>\n","      <td>82800.0</td>\n","      <td>82700.0</td>\n","      <td>83100.0</td>\n","      <td>82400.0</td>\n","      <td>703200</td>\n","      <td>3.113325</td>\n","    </tr>\n","    <tr>\n","      <th>248</th>\n","      <td>29/12/2023</td>\n","      <td>80300.0</td>\n","      <td>83500.0</td>\n","      <td>83900.0</td>\n","      <td>80300.0</td>\n","      <td>1894326</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>249 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd13760c-ada5-456d-812d-3581997b4d3a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dd13760c-ada5-456d-812d-3581997b4d3a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dd13760c-ada5-456d-812d-3581997b4d3a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6febdbb4-b7fb-444a-bf9e-83f22ebd318b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6febdbb4-b7fb-444a-bf9e-83f22ebd318b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6febdbb4-b7fb-444a-bf9e-83f22ebd318b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["VCB.info()"],"metadata":{"id":"Lj99cSN5rG4u","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704861106472,"user_tz":-420,"elapsed":56,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"9a883ee2-b1b3-45ab-ea60-38f25a9913f8"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 249 entries, 0 to 248\n","Data columns (total 7 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Date      249 non-null    object \n"," 1   Price     249 non-null    float64\n"," 2   Open      249 non-null    float64\n"," 3   High      249 non-null    float64\n"," 4   Low       249 non-null    float64\n"," 5   Vol.      249 non-null    int64  \n"," 6   Change %  248 non-null    float64\n","dtypes: float64(5), int64(1), object(1)\n","memory usage: 13.7+ KB\n"]}]},{"cell_type":"markdown","source":["# 2. Tiền xử lý dữ liệu"],"metadata":{"id":"n7Kzv8I3rqLZ"}},{"cell_type":"markdown","source":["### Loại bỏ một số dữ liệu trống trong dataset"],"metadata":{"id":"ovfqfYQ1r7Mt"}},{"cell_type":"code","source":["# Drop missing values\n","VCB = VCB.dropna()"],"metadata":{"id":"y9KGNmaFPNat","executionInfo":{"status":"ok","timestamp":1704861106473,"user_tz":-420,"elapsed":49,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["VCB1 = VCB.reset_index()['Price']"],"metadata":{"id":"-TCtieoePNgm","executionInfo":{"status":"ok","timestamp":1704861106474,"user_tz":-420,"elapsed":48,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["VCB['Index'] = np.arange(len(VCB.index))\n","\n","\n"],"metadata":{"id":"qMRscjafPNjp","executionInfo":{"status":"ok","timestamp":1704861106475,"user_tz":-420,"elapsed":48,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"41042117-60c7-4e07-9f6a-137517f28ae5"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-8-f4f3ac7b7b36>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  VCB['Index'] = np.arange(len(VCB.index))\n"]}]},{"cell_type":"markdown","source":["<h1> 3.Scale dữ liệu"],"metadata":{"id":"VVEZNAFepzSx"}},{"cell_type":"code","source":["scaler=MinMaxScaler(feature_range=(0,1))\n","VCB1=scaler.fit_transform(np.array(VCB1).reshape(-1,1))"],"metadata":{"id":"G-s3Ci_Op24W","executionInfo":{"status":"ok","timestamp":1704861106476,"user_tz":-420,"elapsed":40,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":["# 4. Chia tập dữ liệu để train-test-validate theo tỉ lệ 7:2:1"],"metadata":{"id":"QfL_QnOzsfRX"}},{"cell_type":"code","source":["# Split the data into training, testing, and validation sets\n","train_size = int(0.7 * len(VCB1))\n","test_size = int(0.2 * len(VCB1))\n","val_size = len(VCB1) - train_size - test_size"],"metadata":{"id":"rq0DYR5nPde7","executionInfo":{"status":"ok","timestamp":1704861106477,"user_tz":-420,"elapsed":39,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["train_data = VCB1[:train_size]\n","test_data = VCB1[train_size:train_size+test_size]\n","val_data = VCB1[train_size+test_size:]"],"metadata":{"id":"OHHVGbyLPom3","executionInfo":{"status":"ok","timestamp":1704861106478,"user_tz":-420,"elapsed":39,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["<h1>Hàm Create Dataset"],"metadata":{"id":"7wuXUGKRtFIp"}},{"cell_type":"code","source":["#Chuyển mảng giá trị của dataset thành ma trận\n","def create_dataset(dataset, time_step=1):\n","\tdataX, dataY = [], []\n","\tfor i in range(len(dataset)-time_step-1):\n","\t\ta = dataset[i:(i+time_step), 0]\n","\t\tdataX.append(a)\n","\t\tdataY.append(dataset[i + time_step, 0])\n","\treturn numpy.array(dataX), numpy.array(dataY)"],"metadata":{"id":"0x5fnQwxs2K8","executionInfo":{"status":"ok","timestamp":1704861106478,"user_tz":-420,"elapsed":38,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["import numpy\n","#Reshape into X=t,t+1, t+2... t+20 and Y= t+20\n","time_step = 20\n","X_train, y_train = create_dataset(train_data, time_step)\n","X_val, yval = create_dataset(val_data, time_step)\n","X_test, ytest = create_dataset(test_data, time_step)"],"metadata":{"id":"vYHWGCZrHFOJ","executionInfo":{"status":"ok","timestamp":1704861106479,"user_tz":-420,"elapsed":38,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["#Reshape input to be [samples, time steps, features] which is required for LSTM\n","X_train =X_train.reshape(X_train.shape[0],X_train.shape[1] , 1)\n","X_test = X_test.reshape(X_test.shape[0],X_test.shape[1] , 1)\n","X_val = X_val.reshape(X_val.shape[0],X_val.shape[1] , 1)"],"metadata":{"id":"VVP0KnNsHhh-","executionInfo":{"status":"ok","timestamp":1704861106479,"user_tz":-420,"elapsed":37,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["#Define GRU model\n","model = Sequential()\n","model.add(GRU(64, input_shape=(time_step, 1)))\n","model.add(Dense(1))\n","model.compile(optimizer='adam', loss='mean_squared_error')"],"metadata":{"id":"TvXQkvakHqVc","executionInfo":{"status":"ok","timestamp":1704861107528,"user_tz":-420,"elapsed":1085,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["#Model fitting\n","model.fit(X_train,y_train,validation_data=(X_test,ytest),epochs=100,batch_size=64,verbose=1)"],"metadata":{"id":"qamlhrLuH21t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704861119131,"user_tz":-420,"elapsed":11629,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"3d1e2058-d4ac-42ef-8d05-3a8c9b7c4c3f"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","3/3 [==============================] - 3s 264ms/step - loss: 0.2708 - val_loss: 0.0063\n","Epoch 2/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.1756 - val_loss: 0.0011\n","Epoch 3/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.1023 - val_loss: 0.0035\n","Epoch 4/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.0541 - val_loss: 0.0131\n","Epoch 5/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0289 - val_loss: 0.0279\n","Epoch 6/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0258 - val_loss: 0.0407\n","Epoch 7/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.0322 - val_loss: 0.0431\n","Epoch 8/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0331 - val_loss: 0.0361\n","Epoch 9/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0270 - val_loss: 0.0263\n","Epoch 10/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.0213 - val_loss: 0.0176\n","Epoch 11/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.0185 - val_loss: 0.0119\n","Epoch 12/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0175 - val_loss: 0.0088\n","Epoch 13/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0175 - val_loss: 0.0071\n","Epoch 14/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0169 - val_loss: 0.0064\n","Epoch 15/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.0158 - val_loss: 0.0062\n","Epoch 16/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.0145 - val_loss: 0.0064\n","Epoch 17/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.0133 - val_loss: 0.0067\n","Epoch 18/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.0128 - val_loss: 0.0069\n","Epoch 19/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0124 - val_loss: 0.0063\n","Epoch 20/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0121 - val_loss: 0.0054\n","Epoch 21/100\n","3/3 [==============================] - 0s 44ms/step - loss: 0.0116 - val_loss: 0.0042\n","Epoch 22/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0110 - val_loss: 0.0032\n","Epoch 23/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0107 - val_loss: 0.0022\n","Epoch 24/100\n","3/3 [==============================] - 0s 33ms/step - loss: 0.0105 - val_loss: 0.0018\n","Epoch 25/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0104 - val_loss: 0.0016\n","Epoch 26/100\n","3/3 [==============================] - 0s 33ms/step - loss: 0.0102 - val_loss: 0.0015\n","Epoch 27/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0099 - val_loss: 0.0015\n","Epoch 28/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0098 - val_loss: 0.0015\n","Epoch 29/100\n","3/3 [==============================] - 0s 44ms/step - loss: 0.0096 - val_loss: 0.0014\n","Epoch 30/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0095 - val_loss: 0.0013\n","Epoch 31/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0094 - val_loss: 0.0013\n","Epoch 32/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0093 - val_loss: 0.0013\n","Epoch 33/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0093 - val_loss: 0.0013\n","Epoch 34/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0092 - val_loss: 0.0012\n","Epoch 35/100\n","3/3 [==============================] - 0s 46ms/step - loss: 0.0091 - val_loss: 0.0012\n","Epoch 36/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0090 - val_loss: 0.0012\n","Epoch 37/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0089 - val_loss: 0.0012\n","Epoch 38/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0089 - val_loss: 0.0011\n","Epoch 39/100\n","3/3 [==============================] - 0s 35ms/step - loss: 0.0088 - val_loss: 0.0011\n","Epoch 40/100\n","3/3 [==============================] - 0s 33ms/step - loss: 0.0087 - val_loss: 0.0011\n","Epoch 41/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0087 - val_loss: 0.0010\n","Epoch 42/100\n","3/3 [==============================] - 0s 42ms/step - loss: 0.0086 - val_loss: 0.0010\n","Epoch 43/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0085 - val_loss: 0.0010\n","Epoch 44/100\n","3/3 [==============================] - 0s 35ms/step - loss: 0.0084 - val_loss: 0.0010\n","Epoch 45/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0084 - val_loss: 0.0011\n","Epoch 46/100\n","3/3 [==============================] - 0s 35ms/step - loss: 0.0083 - val_loss: 0.0011\n","Epoch 47/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0082 - val_loss: 0.0011\n","Epoch 48/100\n","3/3 [==============================] - 0s 33ms/step - loss: 0.0082 - val_loss: 0.0011\n","Epoch 49/100\n","3/3 [==============================] - 0s 44ms/step - loss: 0.0081 - val_loss: 0.0011\n","Epoch 50/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0080 - val_loss: 0.0010\n","Epoch 51/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0080 - val_loss: 9.3905e-04\n","Epoch 52/100\n","3/3 [==============================] - 0s 44ms/step - loss: 0.0080 - val_loss: 9.1547e-04\n","Epoch 53/100\n","3/3 [==============================] - 0s 45ms/step - loss: 0.0079 - val_loss: 9.7082e-04\n","Epoch 54/100\n","3/3 [==============================] - 0s 35ms/step - loss: 0.0078 - val_loss: 0.0010\n","Epoch 55/100\n","3/3 [==============================] - 0s 35ms/step - loss: 0.0078 - val_loss: 0.0011\n","Epoch 56/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0077 - val_loss: 0.0011\n","Epoch 57/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0077 - val_loss: 0.0010\n","Epoch 58/100\n","3/3 [==============================] - 0s 33ms/step - loss: 0.0076 - val_loss: 0.0010\n","Epoch 59/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0076 - val_loss: 9.9077e-04\n","Epoch 60/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0075 - val_loss: 9.9133e-04\n","Epoch 61/100\n","3/3 [==============================] - 0s 33ms/step - loss: 0.0075 - val_loss: 9.5437e-04\n","Epoch 62/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0076 - val_loss: 8.9983e-04\n","Epoch 63/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0075 - val_loss: 9.7166e-04\n","Epoch 64/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0074 - val_loss: 0.0011\n","Epoch 65/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0074 - val_loss: 0.0012\n","Epoch 66/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0074 - val_loss: 0.0011\n","Epoch 67/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0073 - val_loss: 0.0011\n","Epoch 68/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0073 - val_loss: 0.0011\n","Epoch 69/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0072 - val_loss: 0.0010\n","Epoch 70/100\n","3/3 [==============================] - 0s 42ms/step - loss: 0.0072 - val_loss: 9.8081e-04\n","Epoch 71/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0072 - val_loss: 9.4622e-04\n","Epoch 72/100\n","3/3 [==============================] - 0s 47ms/step - loss: 0.0071 - val_loss: 8.7995e-04\n","Epoch 73/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0072 - val_loss: 8.6427e-04\n","Epoch 74/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0071 - val_loss: 9.4304e-04\n","Epoch 75/100\n","3/3 [==============================] - 0s 30ms/step - loss: 0.0071 - val_loss: 0.0010\n","Epoch 76/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0071 - val_loss: 0.0010\n","Epoch 77/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0071 - val_loss: 9.4743e-04\n","Epoch 78/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0070 - val_loss: 9.4204e-04\n","Epoch 79/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0070 - val_loss: 9.0691e-04\n","Epoch 80/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0070 - val_loss: 9.0907e-04\n","Epoch 81/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0070 - val_loss: 8.7449e-04\n","Epoch 82/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.0070 - val_loss: 8.8578e-04\n","Epoch 83/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.0070 - val_loss: 9.3648e-04\n","Epoch 84/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0069 - val_loss: 9.2357e-04\n","Epoch 85/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0069 - val_loss: 9.0994e-04\n","Epoch 86/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0069 - val_loss: 9.1382e-04\n","Epoch 87/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0069 - val_loss: 9.3203e-04\n","Epoch 88/100\n","3/3 [==============================] - 0s 31ms/step - loss: 0.0069 - val_loss: 9.2587e-04\n","Epoch 89/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0069 - val_loss: 8.9408e-04\n","Epoch 90/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0069 - val_loss: 8.8157e-04\n","Epoch 91/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0068 - val_loss: 8.2479e-04\n","Epoch 92/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0068 - val_loss: 8.2683e-04\n","Epoch 93/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0068 - val_loss: 8.9047e-04\n","Epoch 94/100\n","3/3 [==============================] - 0s 24ms/step - loss: 0.0068 - val_loss: 9.4220e-04\n","Epoch 95/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0068 - val_loss: 9.0136e-04\n","Epoch 96/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0067 - val_loss: 8.4474e-04\n","Epoch 97/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0069 - val_loss: 8.1089e-04\n","Epoch 98/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0069 - val_loss: 9.1763e-04\n","Epoch 99/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0068 - val_loss: 0.0010\n","Epoch 100/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0068 - val_loss: 9.7406e-04\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7e6ce6e4c5e0>"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["<h1>Dự báo dữ liệu test, val"],"metadata":{"id":"BoCSCZfvtSoK"}},{"cell_type":"code","source":["train_predict=model.predict(X_train)\n","y_pred=model.predict(X_test)\n","y_pred_val=model.predict(X_val)"],"metadata":{"id":"PXdaljDYPoso","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704861119735,"user_tz":-420,"elapsed":615,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"fba91c66-d622-4f45-da14-343c6b306c03"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["5/5 [==============================] - 0s 4ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n"]}]},{"cell_type":"markdown","source":["<h1>Chuẩn hóa dữ liệu"],"metadata":{"id":"BgyCaXcjt--_"}},{"cell_type":"code","source":["#Chuẩn hóa dữ liệu y_pred, y_pred_val\n","train_predict=scaler.inverse_transform(train_predict)\n","y_pred=scaler.inverse_transform(y_pred)\n","y_pred_val=scaler.inverse_transform(y_pred_val)"],"metadata":{"id":"kpOOSDZ6QGw7","executionInfo":{"status":"ok","timestamp":1704861119736,"user_tz":-420,"elapsed":64,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["ytest = scaler.inverse_transform(ytest.reshape(-1,1))\n","ytest"],"metadata":{"id":"5bcSO5wiPSE6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704861119736,"user_tz":-420,"elapsed":62,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"b40f0906-99c5-4c03-f363-039d8c35b681"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[86600.],\n","       [86100.],\n","       [85900.],\n","       [85900.],\n","       [84500.],\n","       [84800.],\n","       [84500.],\n","       [86000.],\n","       [85800.],\n","       [84500.],\n","       [85000.],\n","       [85900.],\n","       [86800.],\n","       [87800.],\n","       [89000.],\n","       [88900.],\n","       [89500.],\n","       [88300.],\n","       [89500.],\n","       [87900.],\n","       [86000.],\n","       [85500.],\n","       [86000.],\n","       [87700.],\n","       [88000.],\n","       [85600.],\n","       [86100.],\n","       [86600.]])"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["yval = scaler.inverse_transform(yval.reshape(-1,1))\n","yval"],"metadata":{"id":"kvXio7uyPdXD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704861119737,"user_tz":-420,"elapsed":57,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"5322804f-d899-4379-d1a4-7a308eef7a78"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[80900.],\n","       [80900.],\n","       [81800.],\n","       [82800.],\n","       [82700.]])"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["<h1>Đánh giá độ chính xác của thuật toán"],"metadata":{"id":"v3wMG4FGEdsG"}},{"cell_type":"code","source":["# RMSE\n","valid_rmse = np.sqrt(np.mean((y_pred_val - yval)**2))\n","test_rmse = np.sqrt(np.mean((y_pred - ytest)**2))\n","print('Validation RMSE:', valid_rmse)\n","print('Testing RMSE:', test_rmse)"],"metadata":{"id":"lCzRkwcDPzAg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704861119737,"user_tz":-420,"elapsed":51,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"8d3177dd-18c8-48de-99be-65db4f094803"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation RMSE: 848.7835678523427\n","Testing RMSE: 1400.5960624226263\n"]}]},{"cell_type":"code","source":["#MAE\n","valid_mae = mean_absolute_error(yval,y_pred_val)\n","test_mae = mean_absolute_error(ytest, y_pred)\n","print('Validation MAE:', valid_mae)\n","print('Testing MAE:', test_mae)"],"metadata":{"id":"_EpYLbfDW1Fk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704861119738,"user_tz":-420,"elapsed":46,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"2956421f-7a1c-4eaa-a38f-1529c370c6c4"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation MAE: 668.7484375\n","Testing MAE: 1142.767857142857\n"]}]},{"cell_type":"code","source":["#MAPE\n","valid_mape = np.mean(np.abs((yval - y_pred_val) / yval))*100\n","test_mape = np.mean(np.abs((ytest - y_pred) / ytest))*100\n","print('Validation MAPE:', valid_mape)\n","print('Testing MAPE:', test_mape)"],"metadata":{"id":"h9Jvo9-5wuLl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704861119739,"user_tz":-420,"elapsed":41,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"a686035d-d46b-4a3b-a0a5-59218507477f"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation MAPE: 0.8222234411195048\n","Testing MAPE: 1.3259718986967837\n"]}]},{"cell_type":"markdown","source":["<h1>Quá trình dự đoán giá cổ phiếu trong 30 ngày tiếp theo"],"metadata":{"id":"FStBXaC5uHfR"}},{"cell_type":"code","source":["x_input=val_data[5:].reshape(1,-1)\n","x_input.shape\n","\n","temp_input=list(x_input)\n","temp_input=temp_input[0].tolist()\n","\n","from numpy import array\n","\n","lst_output=[]\n","n_steps=20\n","i=0\n","while(i<30):\n","\n","    if(len(temp_input)>20):\n","        #print(temp_input)\n","        x_input=np.array(temp_input[1:])\n","        print(\"{} day input {}\".format(i,x_input))\n","        x_input=x_input.reshape(1,-1)\n","        x_input = x_input.reshape((1, n_steps, 1))\n","        #print(x_input)\n","        yhat = model.predict(x_input, verbose=0)\n","        print(\"{} day output {}\".format(i,yhat))\n","        temp_input.extend(yhat[0].tolist())\n","        temp_input=temp_input[1:]\n","        #print(temp_input)\n","        lst_output.extend(yhat.tolist())\n","        i=i+1\n","    else:\n","        x_input = x_input.reshape((1,n_steps,1))\n","        yhat = model.predict(x_input, verbose=0)\n","        print(yhat[0])\n","        temp_input.extend(yhat[0].tolist())\n","        print(len(temp_input))\n","        lst_output.extend(yhat.tolist())\n","        i=i+1\n"],"metadata":{"id":"-zckNSHFPdh4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704861122136,"user_tz":-420,"elapsed":2432,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"ca09dad6-9f1f-478b-8df7-651d0fd77d80"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["0 day input [0.09136185 0.11364523 0.1002752  0.11141689 0.09581852 0.09136185\n"," 0.07353515 0.07353515 0.06239346 0.07799182 0.02896839 0.01337003\n"," 0.00668501 0.00445668 0.         0.         0.02005504 0.04233842\n"," 0.04011008 0.04233842]\n","0 day output [[0.0602329]]\n","1 day input [0.11364523 0.1002752  0.11141689 0.09581852 0.09136185 0.07353515\n"," 0.07353515 0.06239346 0.07799182 0.02896839 0.01337003 0.00668501\n"," 0.00445668 0.         0.         0.02005504 0.04233842 0.04011008\n"," 0.04233842 0.0602329 ]\n","1 day output [[0.06996796]]\n","2 day input [0.1002752  0.11141689 0.09581852 0.09136185 0.07353515 0.07353515\n"," 0.06239346 0.07799182 0.02896839 0.01337003 0.00668501 0.00445668\n"," 0.         0.         0.02005504 0.04233842 0.04011008 0.04233842\n"," 0.0602329  0.06996796]\n","2 day output [[0.08029893]]\n","3 day input [0.11141689 0.09581852 0.09136185 0.07353515 0.07353515 0.06239346\n"," 0.07799182 0.02896839 0.01337003 0.00668501 0.00445668 0.\n"," 0.         0.02005504 0.04233842 0.04011008 0.04233842 0.0602329\n"," 0.06996796 0.08029893]\n","3 day output [[0.09072322]]\n","4 day input [0.09581852 0.09136185 0.07353515 0.07353515 0.06239346 0.07799182\n"," 0.02896839 0.01337003 0.00668501 0.00445668 0.         0.\n"," 0.02005504 0.04233842 0.04011008 0.04233842 0.0602329  0.06996796\n"," 0.08029893 0.09072322]\n","4 day output [[0.10107034]]\n","5 day input [0.09136185 0.07353515 0.07353515 0.06239346 0.07799182 0.02896839\n"," 0.01337003 0.00668501 0.00445668 0.         0.         0.02005504\n"," 0.04233842 0.04011008 0.04233842 0.0602329  0.06996796 0.08029893\n"," 0.09072322 0.10107034]\n","5 day output [[0.11127301]]\n","6 day input [0.07353515 0.07353515 0.06239346 0.07799182 0.02896839 0.01337003\n"," 0.00668501 0.00445668 0.         0.         0.02005504 0.04233842\n"," 0.04011008 0.04233842 0.0602329  0.06996796 0.08029893 0.09072322\n"," 0.10107034 0.11127301]\n","6 day output [[0.12129962]]\n","7 day input [0.07353515 0.06239346 0.07799182 0.02896839 0.01337003 0.00668501\n"," 0.00445668 0.         0.         0.02005504 0.04233842 0.04011008\n"," 0.04233842 0.0602329  0.06996796 0.08029893 0.09072322 0.10107034\n"," 0.11127301 0.12129962]\n","7 day output [[0.13113174]]\n","8 day input [0.06239346 0.07799182 0.02896839 0.01337003 0.00668501 0.00445668\n"," 0.         0.         0.02005504 0.04233842 0.04011008 0.04233842\n"," 0.0602329  0.06996796 0.08029893 0.09072322 0.10107034 0.11127301\n"," 0.12129962 0.13113174]\n","8 day output [[0.14075772]]\n","9 day input [0.07799182 0.02896839 0.01337003 0.00668501 0.00445668 0.\n"," 0.         0.02005504 0.04233842 0.04011008 0.04233842 0.0602329\n"," 0.06996796 0.08029893 0.09072322 0.10107034 0.11127301 0.12129962\n"," 0.13113174 0.14075772]\n","9 day output [[0.15016907]]\n","10 day input [0.02896839 0.01337003 0.00668501 0.00445668 0.         0.\n"," 0.02005504 0.04233842 0.04011008 0.04233842 0.0602329  0.06996796\n"," 0.08029893 0.09072322 0.10107034 0.11127301 0.12129962 0.13113174\n"," 0.14075772 0.15016907]\n","10 day output [[0.1593605]]\n","11 day input [0.01337003 0.00668501 0.00445668 0.         0.         0.02005504\n"," 0.04233842 0.04011008 0.04233842 0.0602329  0.06996796 0.08029893\n"," 0.09072322 0.10107034 0.11127301 0.12129962 0.13113174 0.14075772\n"," 0.15016907 0.1593605 ]\n","11 day output [[0.16832675]]\n","12 day input [0.00668501 0.00445668 0.         0.         0.02005504 0.04233842\n"," 0.04011008 0.04233842 0.0602329  0.06996796 0.08029893 0.09072322\n"," 0.10107034 0.11127301 0.12129962 0.13113174 0.14075772 0.15016907\n"," 0.1593605  0.16832675]\n","12 day output [[0.17706557]]\n","13 day input [0.00445668 0.         0.         0.02005504 0.04233842 0.04011008\n"," 0.04233842 0.0602329  0.06996796 0.08029893 0.09072322 0.10107034\n"," 0.11127301 0.12129962 0.13113174 0.14075772 0.15016907 0.1593605\n"," 0.16832675 0.17706557]\n","13 day output [[0.1855754]]\n","14 day input [0.         0.         0.02005504 0.04233842 0.04011008 0.04233842\n"," 0.0602329  0.06996796 0.08029893 0.09072322 0.10107034 0.11127301\n"," 0.12129962 0.13113174 0.14075772 0.15016907 0.1593605  0.16832675\n"," 0.17706557 0.1855754 ]\n","14 day output [[0.1938555]]\n","15 day input [0.         0.02005504 0.04233842 0.04011008 0.04233842 0.0602329\n"," 0.06996796 0.08029893 0.09072322 0.10107034 0.11127301 0.12129962\n"," 0.13113174 0.14075772 0.15016907 0.1593605  0.16832675 0.17706557\n"," 0.1855754  0.19385549]\n","15 day output [[0.20190543]]\n","16 day input [0.02005504 0.04233842 0.04011008 0.04233842 0.0602329  0.06996796\n"," 0.08029893 0.09072322 0.10107034 0.11127301 0.12129962 0.13113174\n"," 0.14075772 0.15016907 0.1593605  0.16832675 0.17706557 0.1855754\n"," 0.19385549 0.20190543]\n","16 day output [[0.2097259]]\n","17 day input [0.04233842 0.04011008 0.04233842 0.0602329  0.06996796 0.08029893\n"," 0.09072322 0.10107034 0.11127301 0.12129962 0.13113174 0.14075772\n"," 0.15016907 0.1593605  0.16832675 0.17706557 0.1855754  0.19385549\n"," 0.20190543 0.2097259 ]\n","17 day output [[0.21731816]]\n","18 day input [0.04011008 0.04233842 0.0602329  0.06996796 0.08029893 0.09072322\n"," 0.10107034 0.11127301 0.12129962 0.13113174 0.14075772 0.15016907\n"," 0.1593605  0.16832675 0.17706557 0.1855754  0.19385549 0.20190543\n"," 0.2097259  0.21731816]\n","18 day output [[0.22468366]]\n","19 day input [0.04233842 0.0602329  0.06996796 0.08029893 0.09072322 0.10107034\n"," 0.11127301 0.12129962 0.13113174 0.14075772 0.15016907 0.1593605\n"," 0.16832675 0.17706557 0.1855754  0.19385549 0.20190543 0.2097259\n"," 0.21731816 0.22468366]\n","19 day output [[0.23182347]]\n","20 day input [0.0602329  0.06996796 0.08029893 0.09072322 0.10107034 0.11127301\n"," 0.12129962 0.13113174 0.14075772 0.15016907 0.1593605  0.16832675\n"," 0.17706557 0.1855754  0.19385549 0.20190543 0.2097259  0.21731816\n"," 0.22468366 0.23182347]\n","20 day output [[0.23873985]]\n","21 day input [0.06996796 0.08029893 0.09072322 0.10107034 0.11127301 0.12129962\n"," 0.13113174 0.14075772 0.15016907 0.1593605  0.16832675 0.17706557\n"," 0.1855754  0.19385549 0.20190543 0.2097259  0.21731816 0.22468366\n"," 0.23182347 0.23873985]\n","21 day output [[0.24543555]]\n","22 day input [0.08029893 0.09072322 0.10107034 0.11127301 0.12129962 0.13113174\n"," 0.14075772 0.15016907 0.1593605  0.16832675 0.17706557 0.1855754\n"," 0.19385549 0.20190543 0.2097259  0.21731816 0.22468366 0.23182347\n"," 0.23873985 0.24543555]\n","22 day output [[0.25191283]]\n","23 day input [0.09072322 0.10107034 0.11127301 0.12129962 0.13113174 0.14075772\n"," 0.15016907 0.1593605  0.16832675 0.17706557 0.1855754  0.19385549\n"," 0.20190543 0.2097259  0.21731816 0.22468366 0.23182347 0.23873985\n"," 0.24543555 0.25191283]\n","23 day output [[0.25817475]]\n","24 day input [0.10107034 0.11127301 0.12129962 0.13113174 0.14075772 0.15016907\n"," 0.1593605  0.16832675 0.17706557 0.1855754  0.19385549 0.20190543\n"," 0.2097259  0.21731816 0.22468366 0.23182347 0.23873985 0.24543555\n"," 0.25191283 0.25817475]\n","24 day output [[0.2642244]]\n","25 day input [0.11127301 0.12129962 0.13113174 0.14075772 0.15016907 0.1593605\n"," 0.16832675 0.17706557 0.1855754  0.19385549 0.20190543 0.2097259\n"," 0.21731816 0.22468366 0.23182347 0.23873985 0.24543555 0.25191283\n"," 0.25817475 0.26422441]\n","25 day output [[0.270065]]\n","26 day input [0.12129962 0.13113174 0.14075772 0.15016907 0.1593605  0.16832675\n"," 0.17706557 0.1855754  0.19385549 0.20190543 0.2097259  0.21731816\n"," 0.22468366 0.23182347 0.23873985 0.24543555 0.25191283 0.25817475\n"," 0.26422441 0.27006501]\n","26 day output [[0.27570018]]\n","27 day input [0.13113174 0.14075772 0.15016907 0.1593605  0.16832675 0.17706557\n"," 0.1855754  0.19385549 0.20190543 0.2097259  0.21731816 0.22468366\n"," 0.23182347 0.23873985 0.24543555 0.25191283 0.25817475 0.26422441\n"," 0.27006501 0.27570018]\n","27 day output [[0.28113362]]\n","28 day input [0.14075772 0.15016907 0.1593605  0.16832675 0.17706557 0.1855754\n"," 0.19385549 0.20190543 0.2097259  0.21731816 0.22468366 0.23182347\n"," 0.23873985 0.24543555 0.25191283 0.25817475 0.26422441 0.27006501\n"," 0.27570018 0.28113362]\n","28 day output [[0.28636914]]\n","29 day input [0.15016907 0.1593605  0.16832675 0.17706557 0.1855754  0.19385549\n"," 0.20190543 0.2097259  0.21731816 0.22468366 0.23182347 0.23873985\n"," 0.24543555 0.25191283 0.25817475 0.26422441 0.27006501 0.27570018\n"," 0.28113362 0.28636914]\n","29 day output [[0.29141083]]\n"]}]},{"cell_type":"code","source":["print(scaler.inverse_transform(lst_output))"],"metadata":{"id":"URxIuoqi7Dlp","executionInfo":{"status":"ok","timestamp":1704861122137,"user_tz":-420,"elapsed":51,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"77317468-70d7-4a62-d39b-c4161d7d130a"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["[[83603.0415734 ]\n"," [84039.9169483 ]\n"," [84503.53495039]\n"," [84971.34076113]\n"," [85435.68331262]\n"," [85893.54337038]\n"," [86343.50259632]\n"," [86784.7334594 ]\n"," [87216.71402993]\n"," [87639.06247339]\n"," [88051.54139702]\n"," [88453.91541422]\n"," [88846.08288077]\n"," [89227.97425063]\n"," [89599.55608819]\n"," [89960.80900082]\n"," [90311.76441797]\n"," [90652.47851145]\n"," [90983.01614631]\n"," [91303.42613854]\n"," [91613.80879492]\n"," [91914.28849588]\n"," [92204.96621692]\n"," [92485.97904401]\n"," [92757.46673793]\n"," [93019.57240304]\n"," [93272.45920508]\n"," [93516.29298459]\n"," [93751.24493185]\n"," [93977.49827392]]\n"]}]},{"cell_type":"markdown","source":["<h1>Vẽ hình mô tả dự đoán"],"metadata":{"id":"ncMChIbkxjBm"}},{"cell_type":"code","source":["#Drawing plot\n","train_data_index = pd.RangeIndex(start=0, stop=train_size, step=1)\n","plt.plot(scaler.inverse_transform(train_data))\n","test_data_index = pd.RangeIndex(start=train_size, stop=train_size+test_size, step=1)\n","plt.plot(test_data_index,scaler.inverse_transform(test_data))\n","test_data_index = pd.RangeIndex(start=train_size+21, stop=train_size+test_size, step=1)\n","plt.plot(test_data_index,(y_pred))\n","val_data_index = pd.RangeIndex(start=train_size+test_size, stop=train_size+test_size+val_size, step=1)\n","plt.plot(val_data_index,scaler.inverse_transform(val_data))\n","val_data_index = pd.RangeIndex(start=train_size+test_size+21, stop=train_size+test_size+val_size, step=1)\n","plt.plot(val_data_index,y_pred_val)\n","prediect_data_index = pd.RangeIndex(start=len(VCB1)-1, stop=len(VCB1)+29, step=1)\n","plt.plot(prediect_data_index,scaler.inverse_transform(lst_output))\n","plt.legend(['Train','Test','Test Predictions ','Validate','Validate Predictions','Next30days Predictions'])\n","plt.title(\"Dự đoán giá cổ phiếu VCB trong 30 ngày kế tiếp theo tỉ lệ 7-2-1\")\n","plt.show()"],"metadata":{"id":"JH9v4Vo4QIbr","executionInfo":{"status":"ok","timestamp":1704861122939,"user_tz":-420,"elapsed":845,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"colab":{"base_uri":"https://localhost:8080/","height":454},"outputId":"f45e8825-bbf6-498b-f7fb-cd2b9d39a40f"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["model.save('vcb_model.h5')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fw7B0uhmomqk","executionInfo":{"status":"ok","timestamp":1704861122940,"user_tz":-420,"elapsed":30,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"bad3ebd4-f9ce-4bcd-a216-b013012e5db9"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}]}]}