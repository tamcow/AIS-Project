{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1qnE4JcepE0RJQ2oIzjbyHtOLrEi77jCI","timestamp":1697125232108},{"file_id":"1GHR5tTHO0uMu-uzYC9OcNcNjGg8Sbvp7","timestamp":1697083417178}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 1. Kết nối tới drive , import một số thư viện cần thiết"],"metadata":{"id":"7-epYAdnrvEv"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"mK9bDo96rCS3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860997698,"user_tz":-420,"elapsed":3684,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"fe392ac1-3354-4481-8ade-e3a578d55e04"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","execution_count":28,"metadata":{"id":"x7N0Kb9pOhyW","executionInfo":{"status":"ok","timestamp":1704860997699,"user_tz":-420,"elapsed":80,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"outputs":[],"source":["import numpy.polynomial.polynomial as poly\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","\n","\n","from datetime import datetime\n","from sklearn.metrics import r2_score\n","from sklearn.metrics import mean_squared_error, mean_absolute_error\n","from sklearn.preprocessing import MinMaxScaler, StandardScaler\n","from sklearn.utils import column_or_1d\n","\n","from keras.models import Sequential\n","from keras.layers import Dense, GRU"]},{"cell_type":"code","source":["STB = pd.read_csv(\"/content/drive/MyDrive/UIT COURSES/Năm Tư/Kế toán/Dataset/Ngân hàng/Thuật toán/GRU/Data_bank/STB.csv\")"],"metadata":{"id":"4NcZE4PqOoUH","executionInfo":{"status":"ok","timestamp":1704860997699,"user_tz":-420,"elapsed":76,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["STB"],"metadata":{"id":"JV-AX3mOO8T7","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1704860997700,"user_tz":-420,"elapsed":77,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"d4944e17-2ecb-411d-c0de-4b1212230d6d"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date  Price   Open   High    Low      Vol.  Change %\n","0      3/1/2023  23500  22500  23600  22500  16250000  0.858369\n","1      4/1/2023  23300  23600  24100  23300  18040000 -3.719008\n","2      5/1/2023  24200  23400  24250  23400  19220000 -0.206186\n","3      6/1/2023  24250  24200  25100  23500  24070000 -1.622718\n","4      9/1/2023  24650  24600  25000  24200  13240000 -1.202405\n","..          ...    ...    ...    ...    ...       ...       ...\n","244  25/12/2023  27500  27250  27800  27250  12750000  0.000000\n","245  26/12/2023  27500  27600  27600  27150  13850000  0.364964\n","246  27/12/2023  27400  27500  27650  27350  10690000 -0.724638\n","247  28/12/2023  27600  27450  27800  27350  10410000 -1.252236\n","248  29/12/2023  27950  27650  28100  27600  16499400       NaN\n","\n","[249 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-69b8a56b-ad47-417b-b950-b6df37c84fc6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3/1/2023</td>\n","      <td>23500</td>\n","      <td>22500</td>\n","      <td>23600</td>\n","      <td>22500</td>\n","      <td>16250000</td>\n","      <td>0.858369</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4/1/2023</td>\n","      <td>23300</td>\n","      <td>23600</td>\n","      <td>24100</td>\n","      <td>23300</td>\n","      <td>18040000</td>\n","      <td>-3.719008</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5/1/2023</td>\n","      <td>24200</td>\n","      <td>23400</td>\n","      <td>24250</td>\n","      <td>23400</td>\n","      <td>19220000</td>\n","      <td>-0.206186</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6/1/2023</td>\n","      <td>24250</td>\n","      <td>24200</td>\n","      <td>25100</td>\n","      <td>23500</td>\n","      <td>24070000</td>\n","      <td>-1.622718</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9/1/2023</td>\n","      <td>24650</td>\n","      <td>24600</td>\n","      <td>25000</td>\n","      <td>24200</td>\n","      <td>13240000</td>\n","      <td>-1.202405</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>244</th>\n","      <td>25/12/2023</td>\n","      <td>27500</td>\n","      <td>27250</td>\n","      <td>27800</td>\n","      <td>27250</td>\n","      <td>12750000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>245</th>\n","      <td>26/12/2023</td>\n","      <td>27500</td>\n","      <td>27600</td>\n","      <td>27600</td>\n","      <td>27150</td>\n","      <td>13850000</td>\n","      <td>0.364964</td>\n","    </tr>\n","    <tr>\n","      <th>246</th>\n","      <td>27/12/2023</td>\n","      <td>27400</td>\n","      <td>27500</td>\n","      <td>27650</td>\n","      <td>27350</td>\n","      <td>10690000</td>\n","      <td>-0.724638</td>\n","    </tr>\n","    <tr>\n","      <th>247</th>\n","      <td>28/12/2023</td>\n","      <td>27600</td>\n","      <td>27450</td>\n","      <td>27800</td>\n","      <td>27350</td>\n","      <td>10410000</td>\n","      <td>-1.252236</td>\n","    </tr>\n","    <tr>\n","      <th>248</th>\n","      <td>29/12/2023</td>\n","      <td>27950</td>\n","      <td>27650</td>\n","      <td>28100</td>\n","      <td>27600</td>\n","      <td>16499400</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>249 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-69b8a56b-ad47-417b-b950-b6df37c84fc6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-69b8a56b-ad47-417b-b950-b6df37c84fc6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-69b8a56b-ad47-417b-b950-b6df37c84fc6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0237d95f-8664-43f4-b75d-82fe413b6fcb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0237d95f-8664-43f4-b75d-82fe413b6fcb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0237d95f-8664-43f4-b75d-82fe413b6fcb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["STB.info()"],"metadata":{"id":"Lj99cSN5rG4u","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860997700,"user_tz":-420,"elapsed":73,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"bea4473d-b75a-4455-8c0c-0c029546249d"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 249 entries, 0 to 248\n","Data columns (total 7 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Date      249 non-null    object \n"," 1   Price     249 non-null    int64  \n"," 2   Open      249 non-null    int64  \n"," 3   High      249 non-null    int64  \n"," 4   Low       249 non-null    int64  \n"," 5   Vol.      249 non-null    int64  \n"," 6   Change %  248 non-null    float64\n","dtypes: float64(1), int64(5), object(1)\n","memory usage: 13.7+ KB\n"]}]},{"cell_type":"markdown","source":["# 2. Tiền xử lý dữ liệu"],"metadata":{"id":"n7Kzv8I3rqLZ"}},{"cell_type":"markdown","source":["### Loại bỏ một số dữ liệu trống trong dataset"],"metadata":{"id":"ovfqfYQ1r7Mt"}},{"cell_type":"code","source":["# Drop missing values\n","STB = STB.dropna()"],"metadata":{"id":"y9KGNmaFPNat","executionInfo":{"status":"ok","timestamp":1704860997701,"user_tz":-420,"elapsed":64,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["STB1 = STB.reset_index()['Price']"],"metadata":{"id":"-TCtieoePNgm","executionInfo":{"status":"ok","timestamp":1704860997702,"user_tz":-420,"elapsed":64,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["STB['Index'] = np.arange(len(STB.index))\n","\n","\n"],"metadata":{"id":"qMRscjafPNjp","executionInfo":{"status":"ok","timestamp":1704860997702,"user_tz":-420,"elapsed":63,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e8c8577d-775f-440c-f6bb-84c904e3851e"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-34-5e4d276011ea>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  STB['Index'] = np.arange(len(STB.index))\n"]}]},{"cell_type":"markdown","source":["<h1> 3.Scale dữ liệu"],"metadata":{"id":"VVEZNAFepzSx"}},{"cell_type":"code","source":["scaler=MinMaxScaler(feature_range=(0,1))\n","STB1=scaler.fit_transform(np.array(STB1).reshape(-1,1))"],"metadata":{"id":"G-s3Ci_Op24W","executionInfo":{"status":"ok","timestamp":1704860997702,"user_tz":-420,"elapsed":54,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":35,"outputs":[]},{"cell_type":"markdown","source":["# 4. Chia tập dữ liệu để train-test-validate theo tỉ lệ 7:2:1"],"metadata":{"id":"QfL_QnOzsfRX"}},{"cell_type":"code","source":["# Split the data into training, testing, and validation sets\n","train_size = int(0.7 * len(STB1))\n","test_size = int(0.2 * len(STB1))\n","val_size = len(STB1) - train_size - test_size"],"metadata":{"id":"rq0DYR5nPde7","executionInfo":{"status":"ok","timestamp":1704860997703,"user_tz":-420,"elapsed":54,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["train_data = STB1[:train_size]\n","test_data = STB1[train_size:train_size+test_size]\n","val_data = STB1[train_size+test_size:]"],"metadata":{"id":"OHHVGbyLPom3","executionInfo":{"status":"ok","timestamp":1704860997703,"user_tz":-420,"elapsed":52,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":37,"outputs":[]},{"cell_type":"markdown","source":["<h1>Hàm Create Dataset"],"metadata":{"id":"7wuXUGKRtFIp"}},{"cell_type":"code","source":["#Chuyển mảng giá trị của dataset thành ma trận\n","def create_dataset(dataset, time_step=1):\n","\tdataX, dataY = [], []\n","\tfor i in range(len(dataset)-time_step-1):\n","\t\ta = dataset[i:(i+time_step), 0]\n","\t\tdataX.append(a)\n","\t\tdataY.append(dataset[i + time_step, 0])\n","\treturn numpy.array(dataX), numpy.array(dataY)"],"metadata":{"id":"0x5fnQwxs2K8","executionInfo":{"status":"ok","timestamp":1704860997704,"user_tz":-420,"elapsed":52,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["import numpy\n","#Reshape into X=t,t+1, t+2... t+20 and Y= t+20\n","time_step = 20\n","X_train, y_train = create_dataset(train_data, time_step)\n","X_val, yval = create_dataset(val_data, time_step)\n","X_test, ytest = create_dataset(test_data, time_step)"],"metadata":{"id":"vYHWGCZrHFOJ","executionInfo":{"status":"ok","timestamp":1704860997704,"user_tz":-420,"elapsed":50,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["#Reshape input to be [samples, time steps, features] which is required for LSTM\n","X_train =X_train.reshape(X_train.shape[0],X_train.shape[1] , 1)\n","X_test = X_test.reshape(X_test.shape[0],X_test.shape[1] , 1)\n","X_val = X_val.reshape(X_val.shape[0],X_val.shape[1] , 1)"],"metadata":{"id":"VVP0KnNsHhh-","executionInfo":{"status":"ok","timestamp":1704860997705,"user_tz":-420,"elapsed":49,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["#Define GRU model\n","model = Sequential()\n","model.add(GRU(64, input_shape=(time_step, 1)))\n","model.add(Dense(1))\n","model.compile(optimizer='adam', loss='mean_squared_error')"],"metadata":{"id":"TvXQkvakHqVc","executionInfo":{"status":"ok","timestamp":1704860998407,"user_tz":-420,"elapsed":750,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["#Model fitting\n","model.fit(X_train,y_train,validation_data=(X_test,ytest),epochs=100,batch_size=64,verbose=1)"],"metadata":{"id":"qamlhrLuH21t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860980810,"user_tz":-420,"elapsed":23432,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"cb465dac-324b-49df-db3f-10f6bf07b9c7"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","3/3 [==============================] - 4s 333ms/step - loss: 0.2503 - val_loss: 0.2556\n","Epoch 2/100\n","3/3 [==============================] - 0s 31ms/step - loss: 0.1627 - val_loss: 0.1465\n","Epoch 3/100\n","3/3 [==============================] - 0s 30ms/step - loss: 0.0922 - val_loss: 0.0688\n","Epoch 4/100\n","3/3 [==============================] - 0s 32ms/step - loss: 0.0466 - val_loss: 0.0218\n","Epoch 5/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0215 - val_loss: 0.0075\n","Epoch 6/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0200 - val_loss: 0.0174\n","Epoch 7/100\n","3/3 [==============================] - 0s 30ms/step - loss: 0.0278 - val_loss: 0.0238\n","Epoch 8/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0289 - val_loss: 0.0175\n","Epoch 9/100\n","3/3 [==============================] - 0s 30ms/step - loss: 0.0224 - val_loss: 0.0099\n","Epoch 10/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0158 - val_loss: 0.0071\n","Epoch 11/100\n","3/3 [==============================] - 0s 26ms/step - loss: 0.0133 - val_loss: 0.0079\n","Epoch 12/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0132 - val_loss: 0.0095\n","Epoch 13/100\n","3/3 [==============================] - 0s 28ms/step - loss: 0.0136 - val_loss: 0.0102\n","Epoch 14/100\n","3/3 [==============================] - 0s 29ms/step - loss: 0.0133 - val_loss: 0.0095\n","Epoch 15/100\n","3/3 [==============================] - 0s 40ms/step - loss: 0.0123 - val_loss: 0.0082\n","Epoch 16/100\n","3/3 [==============================] - 0s 33ms/step - loss: 0.0107 - val_loss: 0.0074\n","Epoch 17/100\n","3/3 [==============================] - 0s 35ms/step - loss: 0.0096 - val_loss: 0.0071\n","Epoch 18/100\n","3/3 [==============================] - 0s 32ms/step - loss: 0.0088 - val_loss: 0.0075\n","Epoch 19/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0083 - val_loss: 0.0079\n","Epoch 20/100\n","3/3 [==============================] - 0s 31ms/step - loss: 0.0078 - val_loss: 0.0082\n","Epoch 21/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0074 - val_loss: 0.0082\n","Epoch 22/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0069 - val_loss: 0.0081\n","Epoch 23/100\n","3/3 [==============================] - 0s 43ms/step - loss: 0.0064 - val_loss: 0.0080\n","Epoch 24/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0061 - val_loss: 0.0079\n","Epoch 25/100\n","3/3 [==============================] - 0s 43ms/step - loss: 0.0058 - val_loss: 0.0080\n","Epoch 26/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0056 - val_loss: 0.0082\n","Epoch 27/100\n","3/3 [==============================] - 0s 98ms/step - loss: 0.0053 - val_loss: 0.0086\n","Epoch 28/100\n","3/3 [==============================] - 0s 89ms/step - loss: 0.0051 - val_loss: 0.0090\n","Epoch 29/100\n","3/3 [==============================] - 0s 92ms/step - loss: 0.0050 - val_loss: 0.0092\n","Epoch 30/100\n","3/3 [==============================] - 0s 97ms/step - loss: 0.0049 - val_loss: 0.0094\n","Epoch 31/100\n","3/3 [==============================] - 0s 68ms/step - loss: 0.0048 - val_loss: 0.0093\n","Epoch 32/100\n","3/3 [==============================] - 0s 62ms/step - loss: 0.0048 - val_loss: 0.0093\n","Epoch 33/100\n","3/3 [==============================] - 0s 50ms/step - loss: 0.0047 - val_loss: 0.0093\n","Epoch 34/100\n","3/3 [==============================] - 0s 48ms/step - loss: 0.0047 - val_loss: 0.0093\n","Epoch 35/100\n","3/3 [==============================] - 0s 25ms/step - loss: 0.0047 - val_loss: 0.0097\n","Epoch 36/100\n","3/3 [==============================] - 0s 27ms/step - loss: 0.0047 - val_loss: 0.0100\n","Epoch 37/100\n","3/3 [==============================] - 0s 32ms/step - loss: 0.0046 - val_loss: 0.0096\n","Epoch 38/100\n","3/3 [==============================] - 0s 43ms/step - loss: 0.0046 - val_loss: 0.0092\n","Epoch 39/100\n","3/3 [==============================] - 0s 129ms/step - loss: 0.0046 - val_loss: 0.0090\n","Epoch 40/100\n","3/3 [==============================] - 0s 105ms/step - loss: 0.0046 - val_loss: 0.0090\n","Epoch 41/100\n","3/3 [==============================] - 0s 117ms/step - loss: 0.0046 - val_loss: 0.0095\n","Epoch 42/100\n","3/3 [==============================] - 0s 100ms/step - loss: 0.0046 - val_loss: 0.0101\n","Epoch 43/100\n","3/3 [==============================] - 0s 111ms/step - loss: 0.0046 - val_loss: 0.0101\n","Epoch 44/100\n","3/3 [==============================] - 0s 58ms/step - loss: 0.0046 - val_loss: 0.0096\n","Epoch 45/100\n","3/3 [==============================] - 0s 104ms/step - loss: 0.0045 - val_loss: 0.0093\n","Epoch 46/100\n","3/3 [==============================] - 0s 76ms/step - loss: 0.0045 - val_loss: 0.0091\n","Epoch 47/100\n","3/3 [==============================] - 0s 77ms/step - loss: 0.0044 - val_loss: 0.0092\n","Epoch 48/100\n","3/3 [==============================] - 0s 105ms/step - loss: 0.0044 - val_loss: 0.0094\n","Epoch 49/100\n","3/3 [==============================] - 0s 54ms/step - loss: 0.0044 - val_loss: 0.0095\n","Epoch 50/100\n","3/3 [==============================] - 0s 112ms/step - loss: 0.0044 - val_loss: 0.0092\n","Epoch 51/100\n","3/3 [==============================] - 0s 104ms/step - loss: 0.0044 - val_loss: 0.0088\n","Epoch 52/100\n","3/3 [==============================] - 0s 94ms/step - loss: 0.0044 - val_loss: 0.0086\n","Epoch 53/100\n","3/3 [==============================] - 0s 96ms/step - loss: 0.0044 - val_loss: 0.0086\n","Epoch 54/100\n","3/3 [==============================] - 0s 82ms/step - loss: 0.0043 - val_loss: 0.0087\n","Epoch 55/100\n","3/3 [==============================] - 0s 101ms/step - loss: 0.0043 - val_loss: 0.0087\n","Epoch 56/100\n","3/3 [==============================] - 0s 57ms/step - loss: 0.0043 - val_loss: 0.0088\n","Epoch 57/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0043 - val_loss: 0.0091\n","Epoch 58/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0043 - val_loss: 0.0091\n","Epoch 59/100\n","3/3 [==============================] - 0s 38ms/step - loss: 0.0043 - val_loss: 0.0087\n","Epoch 60/100\n","3/3 [==============================] - 0s 44ms/step - loss: 0.0042 - val_loss: 0.0086\n","Epoch 61/100\n","3/3 [==============================] - 0s 39ms/step - loss: 0.0043 - val_loss: 0.0084\n","Epoch 62/100\n","3/3 [==============================] - 0s 44ms/step - loss: 0.0042 - val_loss: 0.0084\n","Epoch 63/100\n","3/3 [==============================] - 0s 48ms/step - loss: 0.0042 - val_loss: 0.0086\n","Epoch 64/100\n","3/3 [==============================] - 0s 49ms/step - loss: 0.0042 - val_loss: 0.0088\n","Epoch 65/100\n","3/3 [==============================] - 0s 46ms/step - loss: 0.0042 - val_loss: 0.0089\n","Epoch 66/100\n","3/3 [==============================] - 0s 65ms/step - loss: 0.0042 - val_loss: 0.0087\n","Epoch 67/100\n","3/3 [==============================] - 0s 49ms/step - loss: 0.0041 - val_loss: 0.0083\n","Epoch 68/100\n","3/3 [==============================] - 0s 56ms/step - loss: 0.0041 - val_loss: 0.0080\n","Epoch 69/100\n","3/3 [==============================] - 0s 56ms/step - loss: 0.0041 - val_loss: 0.0080\n","Epoch 70/100\n","3/3 [==============================] - 0s 61ms/step - loss: 0.0041 - val_loss: 0.0079\n","Epoch 71/100\n","3/3 [==============================] - 0s 47ms/step - loss: 0.0041 - val_loss: 0.0081\n","Epoch 72/100\n","3/3 [==============================] - 0s 52ms/step - loss: 0.0041 - val_loss: 0.0081\n","Epoch 73/100\n","3/3 [==============================] - 0s 48ms/step - loss: 0.0040 - val_loss: 0.0082\n","Epoch 74/100\n","3/3 [==============================] - 0s 47ms/step - loss: 0.0040 - val_loss: 0.0085\n","Epoch 75/100\n","3/3 [==============================] - 0s 62ms/step - loss: 0.0041 - val_loss: 0.0085\n","Epoch 76/100\n","3/3 [==============================] - 0s 56ms/step - loss: 0.0040 - val_loss: 0.0079\n","Epoch 77/100\n","3/3 [==============================] - 0s 62ms/step - loss: 0.0040 - val_loss: 0.0075\n","Epoch 78/100\n","3/3 [==============================] - 0s 63ms/step - loss: 0.0040 - val_loss: 0.0076\n","Epoch 79/100\n","3/3 [==============================] - 0s 61ms/step - loss: 0.0040 - val_loss: 0.0077\n","Epoch 80/100\n","3/3 [==============================] - 0s 43ms/step - loss: 0.0040 - val_loss: 0.0077\n","Epoch 81/100\n","3/3 [==============================] - 0s 59ms/step - loss: 0.0040 - val_loss: 0.0078\n","Epoch 82/100\n","3/3 [==============================] - 0s 48ms/step - loss: 0.0039 - val_loss: 0.0077\n","Epoch 83/100\n","3/3 [==============================] - 0s 51ms/step - loss: 0.0039 - val_loss: 0.0076\n","Epoch 84/100\n","3/3 [==============================] - 0s 51ms/step - loss: 0.0039 - val_loss: 0.0074\n","Epoch 85/100\n","3/3 [==============================] - 0s 58ms/step - loss: 0.0039 - val_loss: 0.0075\n","Epoch 86/100\n","3/3 [==============================] - 0s 46ms/step - loss: 0.0039 - val_loss: 0.0077\n","Epoch 87/100\n","3/3 [==============================] - 0s 55ms/step - loss: 0.0039 - val_loss: 0.0079\n","Epoch 88/100\n","3/3 [==============================] - 0s 53ms/step - loss: 0.0039 - val_loss: 0.0079\n","Epoch 89/100\n","3/3 [==============================] - 0s 60ms/step - loss: 0.0039 - val_loss: 0.0075\n","Epoch 90/100\n","3/3 [==============================] - 0s 53ms/step - loss: 0.0039 - val_loss: 0.0073\n","Epoch 91/100\n","3/3 [==============================] - 0s 48ms/step - loss: 0.0038 - val_loss: 0.0074\n","Epoch 92/100\n","3/3 [==============================] - 0s 63ms/step - loss: 0.0038 - val_loss: 0.0077\n","Epoch 93/100\n","3/3 [==============================] - 0s 45ms/step - loss: 0.0038 - val_loss: 0.0077\n","Epoch 94/100\n","3/3 [==============================] - 0s 32ms/step - loss: 0.0038 - val_loss: 0.0078\n","Epoch 95/100\n","3/3 [==============================] - 0s 41ms/step - loss: 0.0038 - val_loss: 0.0076\n","Epoch 96/100\n","3/3 [==============================] - 0s 36ms/step - loss: 0.0038 - val_loss: 0.0072\n","Epoch 97/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0038 - val_loss: 0.0072\n","Epoch 98/100\n","3/3 [==============================] - 0s 42ms/step - loss: 0.0038 - val_loss: 0.0073\n","Epoch 99/100\n","3/3 [==============================] - 0s 37ms/step - loss: 0.0037 - val_loss: 0.0075\n","Epoch 100/100\n","3/3 [==============================] - 0s 34ms/step - loss: 0.0038 - val_loss: 0.0077\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7c2d126a7e50>"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["<h1>Dự báo dữ liệu test, val"],"metadata":{"id":"BoCSCZfvtSoK"}},{"cell_type":"code","source":["train_predict=model.predict(X_train)\n","y_pred=model.predict(X_test)\n","y_pred_val=model.predict(X_val)"],"metadata":{"id":"PXdaljDYPoso","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860982409,"user_tz":-420,"elapsed":1611,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"ab1885a8-ea20-4110-e37b-b1dd34d76a30"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["5/5 [==============================] - 1s 9ms/step\n","1/1 [==============================] - 0s 44ms/step\n","1/1 [==============================] - 0s 44ms/step\n"]}]},{"cell_type":"markdown","source":["<h1>Chuẩn hóa dữ liệu"],"metadata":{"id":"BgyCaXcjt--_"}},{"cell_type":"code","source":["#Chuẩn hóa dữ liệu y_pred, y_pred_val\n","train_predict=scaler.inverse_transform(train_predict)\n","y_pred=scaler.inverse_transform(y_pred)\n","y_pred_val=scaler.inverse_transform(y_pred_val)"],"metadata":{"id":"kpOOSDZ6QGw7","executionInfo":{"status":"ok","timestamp":1704860982409,"user_tz":-420,"elapsed":8,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["ytest = scaler.inverse_transform(ytest.reshape(-1,1))\n","ytest"],"metadata":{"id":"5bcSO5wiPSE6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860982409,"user_tz":-420,"elapsed":8,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"24440aa3-b9a2-40f6-e27a-43a5447b547e"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[31500.],\n","       [30200.],\n","       [30000.],\n","       [29700.],\n","       [29000.],\n","       [30100.],\n","       [29700.],\n","       [30000.],\n","       [29550.],\n","       [28100.],\n","       [28700.],\n","       [27000.],\n","       [27000.],\n","       [27650.],\n","       [29000.],\n","       [28500.],\n","       [29450.],\n","       [29000.],\n","       [30000.],\n","       [29650.],\n","       [29500.],\n","       [29250.],\n","       [30000.],\n","       [30000.],\n","       [30200.],\n","       [29350.],\n","       [29200.],\n","       [29300.]])"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["yval = scaler.inverse_transform(yval.reshape(-1,1))\n","yval"],"metadata":{"id":"kvXio7uyPdXD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860982409,"user_tz":-420,"elapsed":6,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"b18c5592-e152-46e9-a0bc-263e1c063a39"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[26600.],\n","       [27200.],\n","       [27500.],\n","       [27500.],\n","       [27400.]])"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["<h1>Đánh giá độ chính xác của thuật toán"],"metadata":{"id":"v3wMG4FGEdsG"}},{"cell_type":"code","source":["# RMSE\n","valid_rmse = np.sqrt(np.mean((y_pred_val - yval)**2))\n","test_rmse = np.sqrt(np.mean((y_pred - ytest)**2))\n","print('Validation RMSE:', valid_rmse)\n","print('Testing RMSE:', test_rmse)"],"metadata":{"id":"lCzRkwcDPzAg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860982409,"user_tz":-420,"elapsed":5,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"c32882b9-6743-4bd5-e911-837f7d087163"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation RMSE: 340.13915618182614\n","Testing RMSE: 878.6650810541977\n"]}]},{"cell_type":"code","source":["#MAE\n","valid_mae = mean_absolute_error(yval,y_pred_val)\n","test_mae = mean_absolute_error(ytest, y_pred)\n","print('Validation MAE:', valid_mae)\n","print('Testing MAE:', test_mae)"],"metadata":{"id":"_EpYLbfDW1Fk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860982409,"user_tz":-420,"elapsed":3,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"d6662054-cdd4-4e13-ccdc-980d68203afc"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation MAE: 293.462109375\n","Testing MAE: 692.9090401785716\n"]}]},{"cell_type":"code","source":["#MAPE\n","valid_mape = np.mean(np.abs((yval - y_pred_val) / yval))*100\n","test_mape = np.mean(np.abs((ytest - y_pred) / ytest))*100\n","print('Validation MAPE:', valid_mape)\n","print('Testing MAPE:', test_mape)"],"metadata":{"id":"h9Jvo9-5wuLl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860982815,"user_tz":-420,"elapsed":409,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"0b9190b5-dd0b-4e9f-d583-9507ce288a27"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation MAPE: 1.0762690012624703\n","Testing MAPE: 2.393437869159729\n"]}]},{"cell_type":"markdown","source":["<h1>Quá trình dự đoán giá cổ phiếu trong 30 ngày tiếp theo"],"metadata":{"id":"FStBXaC5uHfR"}},{"cell_type":"code","source":["x_input=val_data[5:].reshape(1,-1)\n","x_input.shape\n","\n","temp_input=list(x_input)\n","temp_input=temp_input[0].tolist()\n","\n","from numpy import array\n","\n","lst_output=[]\n","n_steps=20\n","i=0\n","while(i<30):\n","\n","    if(len(temp_input)>20):\n","        #print(temp_input)\n","        x_input=np.array(temp_input[1:])\n","        print(\"{} day input {}\".format(i,x_input))\n","        x_input=x_input.reshape(1,-1)\n","        x_input = x_input.reshape((1, n_steps, 1))\n","        #print(x_input)\n","        yhat = model.predict(x_input, verbose=0)\n","        print(\"{} day output {}\".format(i,yhat))\n","        temp_input.extend(yhat[0].tolist())\n","        temp_input=temp_input[1:]\n","        #print(temp_input)\n","        lst_output.extend(yhat.tolist())\n","        i=i+1\n","    else:\n","        x_input = x_input.reshape((1,n_steps,1))\n","        yhat = model.predict(x_input, verbose=0)\n","        print(yhat[0])\n","        temp_input.extend(yhat[0].tolist())\n","        print(len(temp_input))\n","        lst_output.extend(yhat.tolist())\n","        i=i+1\n"],"metadata":{"id":"-zckNSHFPdh4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704860992179,"user_tz":-420,"elapsed":9367,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"b2c13232-5fc2-4893-a88f-4c9510c3df0a"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["0 day input [0.42  0.49  0.45  0.48  0.525 0.49  0.455 0.47  0.415 0.38  0.38  0.3\n"," 0.33  0.365 0.33  0.39  0.42  0.42  0.41  0.43 ]\n","0 day output [[0.42923772]]\n","1 day input [0.49       0.45       0.48       0.525      0.49       0.455\n"," 0.47       0.415      0.38       0.38       0.3        0.33\n"," 0.365      0.33       0.39       0.42       0.42       0.41\n"," 0.43       0.42923772]\n","1 day output [[0.43526313]]\n","2 day input [0.45       0.48       0.525      0.49       0.455      0.47\n"," 0.415      0.38       0.38       0.3        0.33       0.365\n"," 0.33       0.39       0.42       0.42       0.41       0.43\n"," 0.42923772 0.43526313]\n","2 day output [[0.4404072]]\n","3 day input [0.48       0.525      0.49       0.455      0.47       0.415\n"," 0.38       0.38       0.3        0.33       0.365      0.33\n"," 0.39       0.42       0.42       0.41       0.43       0.42923772\n"," 0.43526313 0.44040719]\n","3 day output [[0.4453524]]\n","4 day input [0.525      0.49       0.455      0.47       0.415      0.38\n"," 0.38       0.3        0.33       0.365      0.33       0.39\n"," 0.42       0.42       0.41       0.43       0.42923772 0.43526313\n"," 0.44040719 0.44535241]\n","4 day output [[0.4502704]]\n","5 day input [0.49       0.455      0.47       0.415      0.38       0.38\n"," 0.3        0.33       0.365      0.33       0.39       0.42\n"," 0.42       0.41       0.43       0.42923772 0.43526313 0.44040719\n"," 0.44535241 0.45027041]\n","5 day output [[0.45519763]]\n","6 day input [0.455      0.47       0.415      0.38       0.38       0.3\n"," 0.33       0.365      0.33       0.39       0.42       0.42\n"," 0.41       0.43       0.42923772 0.43526313 0.44040719 0.44535241\n"," 0.45027041 0.45519763]\n","6 day output [[0.460138]]\n","7 day input [0.47       0.415      0.38       0.38       0.3        0.33\n"," 0.365      0.33       0.39       0.42       0.42       0.41\n"," 0.43       0.42923772 0.43526313 0.44040719 0.44535241 0.45027041\n"," 0.45519763 0.46013799]\n","7 day output [[0.46508974]]\n","8 day input [0.415      0.38       0.38       0.3        0.33       0.365\n"," 0.33       0.39       0.42       0.42       0.41       0.43\n"," 0.42923772 0.43526313 0.44040719 0.44535241 0.45027041 0.45519763\n"," 0.46013799 0.46508974]\n","8 day output [[0.47005105]]\n","9 day input [0.38       0.38       0.3        0.33       0.365      0.33\n"," 0.39       0.42       0.42       0.41       0.43       0.42923772\n"," 0.43526313 0.44040719 0.44535241 0.45027041 0.45519763 0.46013799\n"," 0.46508974 0.47005105]\n","9 day output [[0.47502142]]\n","10 day input [0.38       0.3        0.33       0.365      0.33       0.39\n"," 0.42       0.42       0.41       0.43       0.42923772 0.43526313\n"," 0.44040719 0.44535241 0.45027041 0.45519763 0.46013799 0.46508974\n"," 0.47005105 0.47502142]\n","10 day output [[0.48000067]]\n","11 day input [0.3        0.33       0.365      0.33       0.39       0.42\n"," 0.42       0.41       0.43       0.42923772 0.43526313 0.44040719\n"," 0.44535241 0.45027041 0.45519763 0.46013799 0.46508974 0.47005105\n"," 0.47502142 0.48000067]\n","11 day output [[0.48498917]]\n","12 day input [0.33       0.365      0.33       0.39       0.42       0.42\n"," 0.41       0.43       0.42923772 0.43526313 0.44040719 0.44535241\n"," 0.45027041 0.45519763 0.46013799 0.46508974 0.47005105 0.47502142\n"," 0.48000067 0.48498917]\n","12 day output [[0.4899874]]\n","13 day input [0.365      0.33       0.39       0.42       0.42       0.41\n"," 0.43       0.42923772 0.43526313 0.44040719 0.44535241 0.45027041\n"," 0.45519763 0.46013799 0.46508974 0.47005105 0.47502142 0.48000067\n"," 0.48498917 0.4899874 ]\n","13 day output [[0.49499592]]\n","14 day input [0.33       0.39       0.42       0.42       0.41       0.43\n"," 0.42923772 0.43526313 0.44040719 0.44535241 0.45027041 0.45519763\n"," 0.46013799 0.46508974 0.47005105 0.47502142 0.48000067 0.48498917\n"," 0.4899874  0.49499592]\n","14 day output [[0.50001526]]\n","15 day input [0.39       0.42       0.42       0.41       0.43       0.42923772\n"," 0.43526313 0.44040719 0.44535241 0.45027041 0.45519763 0.46013799\n"," 0.46508974 0.47005105 0.47502142 0.48000067 0.48498917 0.4899874\n"," 0.49499592 0.50001526]\n","15 day output [[0.50504655]]\n","16 day input [0.42       0.42       0.41       0.43       0.42923772 0.43526313\n"," 0.44040719 0.44535241 0.45027041 0.45519763 0.46013799 0.46508974\n"," 0.47005105 0.47502142 0.48000067 0.48498917 0.4899874  0.49499592\n"," 0.50001526 0.50504655]\n","16 day output [[0.51009]]\n","17 day input [0.42       0.41       0.43       0.42923772 0.43526313 0.44040719\n"," 0.44535241 0.45027041 0.45519763 0.46013799 0.46508974 0.47005105\n"," 0.47502142 0.48000067 0.48498917 0.4899874  0.49499592 0.50001526\n"," 0.50504655 0.51008999]\n","17 day output [[0.51514655]]\n","18 day input [0.41       0.43       0.42923772 0.43526313 0.44040719 0.44535241\n"," 0.45027041 0.45519763 0.46013799 0.46508974 0.47005105 0.47502142\n"," 0.48000067 0.48498917 0.4899874  0.49499592 0.50001526 0.50504655\n"," 0.51008999 0.51514655]\n","18 day output [[0.5202172]]\n","19 day input [0.43       0.42923772 0.43526313 0.44040719 0.44535241 0.45027041\n"," 0.45519763 0.46013799 0.46508974 0.47005105 0.47502142 0.48000067\n"," 0.48498917 0.4899874  0.49499592 0.50001526 0.50504655 0.51008999\n"," 0.51514655 0.52021718]\n","19 day output [[0.52530265]]\n","20 day input [0.42923772 0.43526313 0.44040719 0.44535241 0.45027041 0.45519763\n"," 0.46013799 0.46508974 0.47005105 0.47502142 0.48000067 0.48498917\n"," 0.4899874  0.49499592 0.50001526 0.50504655 0.51008999 0.51514655\n"," 0.52021718 0.52530265]\n","20 day output [[0.53040373]]\n","21 day input [0.43526313 0.44040719 0.44535241 0.45027041 0.45519763 0.46013799\n"," 0.46508974 0.47005105 0.47502142 0.48000067 0.48498917 0.4899874\n"," 0.49499592 0.50001526 0.50504655 0.51008999 0.51514655 0.52021718\n"," 0.52530265 0.53040373]\n","21 day output [[0.5355213]]\n","22 day input [0.44040719 0.44535241 0.45027041 0.45519763 0.46013799 0.46508974\n"," 0.47005105 0.47502142 0.48000067 0.48498917 0.4899874  0.49499592\n"," 0.50001526 0.50504655 0.51008999 0.51514655 0.52021718 0.52530265\n"," 0.53040373 0.53552133]\n","22 day output [[0.5406563]]\n","23 day input [0.44535241 0.45027041 0.45519763 0.46013799 0.46508974 0.47005105\n"," 0.47502142 0.48000067 0.48498917 0.4899874  0.49499592 0.50001526\n"," 0.50504655 0.51008999 0.51514655 0.52021718 0.52530265 0.53040373\n"," 0.53552133 0.54065633]\n","23 day output [[0.5458094]]\n","24 day input [0.45027041 0.45519763 0.46013799 0.46508974 0.47005105 0.47502142\n"," 0.48000067 0.48498917 0.4899874  0.49499592 0.50001526 0.50504655\n"," 0.51008999 0.51514655 0.52021718 0.52530265 0.53040373 0.53552133\n"," 0.54065633 0.54580939]\n","24 day output [[0.5509816]]\n","25 day input [0.45519763 0.46013799 0.46508974 0.47005105 0.47502142 0.48000067\n"," 0.48498917 0.4899874  0.49499592 0.50001526 0.50504655 0.51008999\n"," 0.51514655 0.52021718 0.52530265 0.53040373 0.53552133 0.54065633\n"," 0.54580939 0.55098158]\n","25 day output [[0.5561737]]\n","26 day input [0.46013799 0.46508974 0.47005105 0.47502142 0.48000067 0.48498917\n"," 0.4899874  0.49499592 0.50001526 0.50504655 0.51008999 0.51514655\n"," 0.52021718 0.52530265 0.53040373 0.53552133 0.54065633 0.54580939\n"," 0.55098158 0.55617368]\n","26 day output [[0.5613866]]\n","27 day input [0.46508974 0.47005105 0.47502142 0.48000067 0.48498917 0.4899874\n"," 0.49499592 0.50001526 0.50504655 0.51008999 0.51514655 0.52021718\n"," 0.52530265 0.53040373 0.53552133 0.54065633 0.54580939 0.55098158\n"," 0.55617368 0.56138659]\n","27 day output [[0.56662095]]\n","28 day input [0.47005105 0.47502142 0.48000067 0.48498917 0.4899874  0.49499592\n"," 0.50001526 0.50504655 0.51008999 0.51514655 0.52021718 0.52530265\n"," 0.53040373 0.53552133 0.54065633 0.54580939 0.55098158 0.55617368\n"," 0.56138659 0.56662095]\n","28 day output [[0.57187784]]\n","29 day input [0.47502142 0.48000067 0.48498917 0.4899874  0.49499592 0.50001526\n"," 0.50504655 0.51008999 0.51514655 0.52021718 0.52530265 0.53040373\n"," 0.53552133 0.54065633 0.54580939 0.55098158 0.55617368 0.56138659\n"," 0.56662095 0.57187784]\n","29 day output [[0.5771581]]\n"]}]},{"cell_type":"code","source":["print(scaler.inverse_transform(lst_output))"],"metadata":{"id":"URxIuoqi7Dlp","executionInfo":{"status":"ok","timestamp":1704860992180,"user_tz":-420,"elapsed":17,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e271d540-94c6-4430-d61d-c2dea5a2f6a8"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["[[27592.37723351]\n"," [27652.63127089]\n"," [27704.07186747]\n"," [27753.5240531 ]\n"," [27802.70414352]\n"," [27851.97632313]\n"," [27901.37993097]\n"," [27950.89738369]\n"," [28000.51050186]\n"," [28050.21421909]\n"," [28100.00674725]\n"," [28149.8916626 ]\n"," [28199.87403154]\n"," [28249.9592185 ]\n"," [28300.15258789]\n"," [28350.46546459]\n"," [28400.89993477]\n"," [28451.46553516]\n"," [28502.17180252]\n"," [28553.02648544]\n"," [28604.03733253]\n"," [28655.21328449]\n"," [28706.56328201]\n"," [28758.09388161]\n"," [28809.81581211]\n"," [28861.73682213]\n"," [28913.86585236]\n"," [28966.2094593 ]\n"," [29018.77837181]\n"," [29071.58093452]]\n"]}]},{"cell_type":"markdown","source":["<h1>Vẽ hình mô tả dự đoán"],"metadata":{"id":"ncMChIbkxjBm"}},{"cell_type":"code","source":["#Drawing plot\n","train_data_index = pd.RangeIndex(start=0, stop=train_size, step=1)\n","plt.plot(scaler.inverse_transform(train_data))\n","test_data_index = pd.RangeIndex(start=train_size, stop=train_size+test_size, step=1)\n","plt.plot(test_data_index,scaler.inverse_transform(test_data))\n","test_data_index = pd.RangeIndex(start=train_size+21, stop=train_size+test_size, step=1)\n","plt.plot(test_data_index,(y_pred))\n","val_data_index = pd.RangeIndex(start=train_size+test_size, stop=train_size+test_size+val_size, step=1)\n","plt.plot(val_data_index,scaler.inverse_transform(val_data))\n","val_data_index = pd.RangeIndex(start=train_size+test_size+21, stop=train_size+test_size+val_size, step=1)\n","plt.plot(val_data_index,y_pred_val)\n","prediect_data_index = pd.RangeIndex(start=len(STB1)-1, stop=len(STB1)+29, step=1)\n","plt.plot(prediect_data_index,scaler.inverse_transform(lst_output))\n","plt.legend(['Train','Test','Test Predictions ','Validate','Validate Predictions','Next30days Predictions'])\n","plt.title(\"Dự đoán giá cổ phiếu STB trong 30 ngày kế tiếp theo tỉ lệ 7-2-1\")\n","plt.show()"],"metadata":{"id":"JH9v4Vo4QIbr","executionInfo":{"status":"ok","timestamp":1704860994021,"user_tz":-420,"elapsed":1850,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"colab":{"base_uri":"https://localhost:8080/","height":454},"outputId":"09aa9011-6e96-4489-c95d-09c6c309a620"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["model.save('stb_model.h5')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1tSgPSB9oc2b","executionInfo":{"status":"ok","timestamp":1704860998408,"user_tz":-420,"elapsed":20,"user":{"displayName":"Thanh Lê Ngọc Mai","userId":"09584355462379728981"}},"outputId":"b69795d4-cc58-4ad4-e429-a329eba4edcc"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}]}]}